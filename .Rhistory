#Supplemental Figure 1: Constraints of down-core and core-top data
#on Uvigerina Mg/Ca T sensitivity, after Elderfield et al. (2010)
#####
#Data needed for plotting
load("post_mgca_dc.RData")
load("post_mgca_ct.RData")
#Make space and layout
png("../SI_Figure01.png", res=600, units="in", width=3, height=3)
par(mar=c(5,5,0.5,0.5), cex=0.75)
##Plot prior
plotd(runif(100000, -0.05, 0.35), ylim=c(0,100),
xlab = expression(italic("Uvigerina") * " Mg/Ca T sensitivity (" * alpha[2] * ")"))
#Add posterior distribution from down-core analysis
lined(post.mgca.dc$BUGSoutput$sims.list$a[,2], col="red") #posterior
#Add posterior distribution  from core-top analysis
lined(post.mgca.ct$BUGSoutput$sims.list$a[,2], col="red", lty=2)
dev.off()
#####
#Supplementary Figure 2: Results of single-site JPI for site U1385
#####
#Load data for site U1385
d = prep.birn()
#Get index values for base time series
ts.ind = match(d$ts.ages.base, d$ts.ages)
#Original interpreted data to plot for comparison
db = read.csv("birner_2016_interp.csv")
#Shorthand
sl = post.birn$BUGSoutput$sims.list
su = post.birn$BUGSoutput$summary
#Get some indicies used to parse data in su
sims = nrow(sl$BWT)
BWT.start = match("BWT[1]", row.names(su))
d18O.start = match("d18O_sw[1]", row.names(su))
#Make space and layout
png("../SI_Figure02.png", units="in", width=5, height=5, res=600)
layout(matrix(c(1,2), 2, 1), heights = c(lcm(2.1*2.54), lcm(2.9*2.54)))
par(mai=c(0.2,1,0.2,0.2), cex=0.85)
##Set up panel 1 - BWT
plot(-10, 0, xlab = "", ylab = expression("BWT ("*degree*" C)"),
xlim=c(1239,1315), ylim=c(-0.5,7), axes = FALSE)
axis(1, labels=FALSE)
axis(2)
box()
#Plot 2500 representative samples from JPI posterior
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(d$ts.ages.base, sl$BWT[i,ts.ind], col = rgb(0,0,0, 0.01))
}
#Add original interpretation of U1385 record based on down-core calibration
lines(db$Age_ka, db$BWT, col=rgb(0,0,0.5))
#Add JPI median and 95% CIs
lines(d$ts.ages.base, su[BWT.start + ts.ind - 1, 5], col="red")
lines(d$ts.ages.base, su[BWT.start + ts.ind - 1, 3], col="red", lty=3)
lines(d$ts.ages.base, su[BWT.start + ts.ind - 1, 7], col="red", lty=3)
#Panel label
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "(a)")
##Set up panel 2 - seawater d18O
par(mai=c(1,1,0.2,0.2))
plot(-10, 0, xlab = "Age (ka)", ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"),
xlim=c(1239,1315), ylim=c(1.5, -0.2))
#Plot 2500 representative samples from JPI posterior
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(d$ts.ages.base, sl$d18O_sw[i, ts.ind], col = rgb(0,0,0, 0.01))
}
#Add original authors' interpretation
lines(db$Age_ka, db$d18O_sw, col=rgb(0,0,0.5))
#Add JPI median and 95% CIs
lines(d$ts.ages.base, su[d18O.start + ts.ind - 1, 5], col="red")
lines(d$ts.ages.base, su[d18O.start + ts.ind - 1, 3], col="red", lty=3)
lines(d$ts.ages.base, su[d18O.start + ts.ind - 1, 7], col="red", lty=3)
#Panel label
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "(b)")
dev.off()
#####
#Supplementary Figure 3: Results of single-site JPI for site 1123
#####
#Load data for site 1123
d = prep.elder()
#Get index values for base time series
ts.ind = match(d$ts.ages.base, d$ts.ages)
#Original interpreted data to plot for comparison
de = read.csv("elderfield_2012_interp.csv")
#Shorthand
sl = post.elder$BUGSoutput$sims.list
su = post.elder$BUGSoutput$summary
#Get some indicies used to parse data in su
sims = nrow(sl$BWT)
BWT.start = match("BWT[1]", row.names(su))
d18O.start = match("d18O_sw[1]", row.names(su))
#Make space and layout
png("../SI_Figure03.png", units="in", width=5, height=5, res=600)
layout(matrix(c(1,2), 2, 1), heights = c(lcm(2.1*2.54), lcm(2.9*2.54)))
par(mai=c(0.2,1,0.2,0.2), cex=0.85)
##Set up panel 1 - BWT
plot(-10, 0, xlab = "", ylab = expression("BWT ("*degree*" C)"),
xlim=c(1239,1315), ylim=c(-3,4), axes = FALSE)
axis(1, labels=FALSE)
axis(2)
box()
#Plot 2500 represenatative samples from JPI posterior
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(d$ts.ages.base, sl$BWT[i, ts.ind], col = rgb(0,0,0, 0.01))
}
#Add original authors' interpretation based on donw-core calibration
lines(de$Age.ka, de$BWT, col=rgb(0,0,0.5))
#Add JPI median and 95% CIs
lines(d$ts.ages.base, su[BWT.start + ts.ind - 1, 5], col="red")
lines(d$ts.ages.base, su[BWT.start + ts.ind - 1, 3], col="red", lty=3)
lines(d$ts.ages.base, su[BWT.start + ts.ind - 1, 7], col="red", lty=3)
#Panel label
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "(a)")
##Set up second panel - seawater d18O
par(mai=c(1,1,0.2,0.2))
plot(-10, 0, xlab = "Age (ka)", ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"),
xlim=c(1239,1315), ylim=c(1.0,-0.6))
#Plot 2500 represenatative samples from JPI posterior
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(d$ts.ages.base, sl$d18O_sw[i, ts.ind], col = rgb(0,0,0, 0.01))
}
#Add original authors' interpretation
lines(de$Age.ka, de$d18O_sw, col=rgb(0,0,0.5))
#Add JPI median and 95% CIs
lines(d$ts.ages.base, su[d18O.start + ts.ind - 1, 5], col="red")
lines(d$ts.ages.base, su[d18O.start + ts.ind - 1, 3], col="red", lty=3)
lines(d$ts.ages.base, su[d18O.start + ts.ind - 1, 7], col="red", lty=3)
#Panel label
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "(b)")
dev.off()
#####
#Supplementary Figure 4: Site 806 calibration data and posterior draws
#####
d = prep.lear()
#Shorthand
sl = post.lear$BUGSoutput$sims.list
#Make space and layout
png("../SI_Figure04.png", units="in", width=8, height=4, res=600)
layout(matrix(c(1,2), ncol=2), widths = c(4,4), heights = c(4,4))
par(mai=c(1,1,0.2,0.2), cex=0.85)
##Panel 1: Mg/Ca
#Set up plot
plot(d$d_mgca_calib$BWT, d$d_mgca_calib$MgCa, xlab = expression("BWT ("*degree*" C)"),
ylab = expression("Mg/Ca"[f]))
#Sequence of BWT values for plotting
bwts = seq(-5, 20, by=2)
#Plot 2500 represenatative samples from JPI posterior
#Used fixed value of 3.5 for Mg/Ca_sw
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
mgcas = (sl$a[i,1] + sl$a[i,2] * bwts) * 3.5 ^ sl$a[i,3]
lines(bwts, mgcas, col = rgb(0,0,0, 0.01))
}
#Calculate median model parameters
a1 = median(sl$a[,1])
a2 = median(sl$a[,2])
a3 = median(sl$a[,3])
#Add median values showing Mg/Ca sensitivity
lines(bwts, (a1 + a2 * bwts) * 3.5 ^ a3, col="red")
lines(bwts, (a1 + a2 * bwts) * 5.5 ^ a3, col="red", lty=2)
lines(bwts, (a1 + a2 * bwts) * 1.5 ^ a3, col="red", lty=3)
points(d$d_mgca_calib$BWT, d$d_mgca_calib$MgCa, pch=21, bg="white")
#panel label
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "(a)")
##Panel 2: d18O
#Set up plot
plot(d$d_d18O_calib$BWT, d$d_d18O_calib$d18O_f.sw,
xlab = expression("BWT ("*degree*" C)"),
ylab = expression(Delta*delta^{18}*"O"[f]*" (\u2030)"))
#Plot 2500 represenatative samples from JPI posterior
#Used fixed value of 3.5 for Mg/Ca_sw
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
mgcas = sl$b[i,1] + sl$b[i,2] * bwts + sl$b[i,3]* bwts^2
lines(bwts, mgcas, col = rgb(0,0,0, 0.01))
}
#Calculate median model parameters
b1 = median(sl$b[,1])
b2 = median(sl$b[,2])
b3 = median(sl$b[,3])
#Add median values showing Mg/Ca sensitivity
lines(bwts, b1 + b2 * bwts + b3 * bwts^2, col="red")
#replot data on top
points(d$d_d18O_calib$BWT, d$d_d18O_calib$d18O_f.sw, pch=21, bg="white")
#panel label
xl = par("usr")[2]-(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "(b)")
dev.off()
#####
#Calculate 95% CI width for environmental records
#####
##Site 806
#Shorthand
sl = post.lear$BUGSoutput$sims.list
su = post.lear$BUGSoutput$summary
#Get some indicies used to parse data in su
sims = nrow(sl$BWT)
BWT.start = match("BWT[1]", row.names(su))
d18O.start = match("d18O_sw[1]", row.names(su))
MgCa.start = match("MgCa_sw_m[1]", row.names(su))
ts.len = ncol(sl$BWT)
#95% CI width
su.diff = as.double(su[,7] - su[,3])
#Average widths for BWT and d18O
mean(su.diff[BWT.start:(BWT.start+ts.len-1)])
mean(su.diff[d18O.start:(d18O.start+ts.len-1)])
##Multi-site analysis for sites 1123 and U1385
#Shorthand
sl = post.multi$BUGSoutput$sims.list
su = post.multi$BUGSoutput$summary
#Get some indicies used to parse data in su
sims = nrow(sl$BWT.b)
BWT.b.start = match("BWT.b[1]", row.names(su))
d18O.b.start = match("d18O_sw.b[1]", row.names(su))
BWT.e.start = match("BWT.e[1]", row.names(su))
d18O.e.start = match("d18O_sw.e[1]", row.names(su))
ts.len = ncol(sl$BWT)
#95% CI width
su.diff = as.double(su[,7] - su[,3])
#Average widths for each variable and record
mean(su.diff[BWT.b.start:(BWT.b.start+ts.len-1)])
mean(su.diff[d18O.b.start:(d18O.b.start+ts.len-1)])
mean(su.diff[BWT.e.start:(BWT.e.start+ts.len-1)])
mean(su.diff[d18O.e.start:(d18O.e.start+ts.len-1)])
d = prep.lear()
#Shorthand
sl = post.lear$BUGSoutput$sims.list
sims = nrow(sl$BWT)
#Make space and layout
png("../SI_Figure04.png", units="in", width=8, height=4, res=600)
layout(matrix(c(1,2), ncol=2), widths = c(4,4), heights = c(4,4))
par(mai=c(1,1,0.2,0.2), cex=0.85)
##Panel 1: Mg/Ca
#Set up plot
plot(d$d_mgca_calib$BWT, d$d_mgca_calib$MgCa, xlab = expression("BWT ("*degree*" C)"),
ylab = expression("Mg/Ca"[f]))
#Sequence of BWT values for plotting
bwts = seq(-5, 20, by=2)
#Plot 2500 represenatative samples from JPI posterior
#Used fixed value of 3.5 for Mg/Ca_sw
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
mgcas = (sl$a[i,1] + sl$a[i,2] * bwts) * 3.5 ^ sl$a[i,3]
lines(bwts, mgcas, col = rgb(0,0,0, 0.01))
}
#Calculate median model parameters
a1 = median(sl$a[,1])
a2 = median(sl$a[,2])
a3 = median(sl$a[,3])
#Add median values showing Mg/Ca sensitivity
lines(bwts, (a1 + a2 * bwts) * 3.5 ^ a3, col="red")
lines(bwts, (a1 + a2 * bwts) * 5.5 ^ a3, col="red", lty=2)
lines(bwts, (a1 + a2 * bwts) * 1.5 ^ a3, col="red", lty=3)
points(d$d_mgca_calib$BWT, d$d_mgca_calib$MgCa, pch=21, bg="white")
#panel label
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "(a)")
##Panel 2: d18O
#Set up plot
plot(d$d_d18O_calib$BWT, d$d_d18O_calib$d18O_f.sw,
xlab = expression("BWT ("*degree*" C)"),
ylab = expression(Delta*delta^{18}*"O"[f]*" (\u2030)"))
#Plot 2500 represenatative samples from JPI posterior
#Used fixed value of 3.5 for Mg/Ca_sw
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
mgcas = sl$b[i,1] + sl$b[i,2] * bwts + sl$b[i,3]* bwts^2
lines(bwts, mgcas, col = rgb(0,0,0, 0.01))
}
#Calculate median model parameters
b1 = median(sl$b[,1])
b2 = median(sl$b[,2])
b3 = median(sl$b[,3])
#Add median values showing Mg/Ca sensitivity
lines(bwts, b1 + b2 * bwts + b3 * bwts^2, col="red")
#replot data on top
points(d$d_d18O_calib$BWT, d$d_d18O_calib$d18O_f.sw, pch=21, bg="white")
#panel label
xl = par("usr")[2]-(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "(b)")
dev.off()
##My local working directories
setwd("C:/Users/gjbowen/Dropbox/HypoMirror/JPI_marine/code/")
setwd("C:/Users/u0133977/Dropbox/HypoMirror/JPI_marine/code/")
#Functions for plotting and data prep, also used throughout
source("helpers.R")
#These first plots use the Lear data, so prep it using the function from helpers.R
d = prep.lear()
##This is the data on which the original interpretations were based
#Data from Lear et al. 2003 and 2015, 'equlibrium offset' of +0.64 removed from
#2003 d18O data. Data only for core levels w/ both Mg/Ca and d18O. d18O values have
#been averaged for levels with multiple observations
dl = read.csv("Lear_combined_interp.csv")
dl_mgca = dl[order(dl$Age.Ma),]
dl_d18O = dl[!is.na(dl$d18O),]
#Shorthand
sl = post.lear$BUGSoutput$sims.list
su = post.lear$BUGSoutput$summary
#Get some indicies used to parse data in su
sims = nrow(sl$BWT)
BWT.start = match("BWT[1]", row.names(su))
d18O.start = match("d18O_sw[1]", row.names(su))
MgCa.start = match("MgCa_sw_m[1]", row.names(su))
#Subset the posterior to retain only base ts steps
BWT = sl$BWT[, ts.ind]
d18Osw = sl$d18O_sw[, ts.ind]
#First calculate the difference of each BWT and d18O_sw value relative to
#the 18Ma value for that posterior draw
#Set aside space
nr = nrow(BWT)
nc = ncol(BWT)
D_BWT = matrix(double(), nrow = nr, ncol = nc)
D_d18O_sw = matrix(double(), nrow = nr, ncol = nc)
#Calculate differences
for(i in 1:nr){
for(j in  1:nc){
D_BWT[i,j] = BWT[i,j] - BWT[i,1]
D_d18O_sw[i,j] = d18Osw[i,j] - d18Osw[i,1]
}
}
#Now calculate the medians of the values obtained above
#Set aside space
D_BWT.m = double()
D_d18O_sw.m = double()
#Get the medians
for(i in 1:nc){
D_BWT.m[i] = median(D_BWT[,i])
D_d18O_sw.m[i] = median(D_d18O_sw[,i])
}
length(D_BWT)
nc
subs = seq(1, length(D_BWT), by=floor(length(D_BWT)/50000))
#2-d kernal density for the differences
library(MASS)
DKE = kde2d(D_BWT[subs], D_d18O_sw[subs], h=c(0.75, 0.3), n=100)
subs = seq(1, length(D_BWT), by=floor(length(D_BWT)/500000))
#2-d kernal density for the differences
library(MASS)
DKE = kde2d(D_BWT[subs], D_d18O_sw[subs], h=c(0.75, 0.3), n=100)
#Correlation for different periods
lm15 = lm(D_d18O_sw.m[d$ts.ages.base > 15] ~ D_BWT.m[d$ts.ages.base > 15])
lm6 =  lm(D_d18O_sw.m[d$ts.ages.base > 6 & d$ts.ages.base < 14] ~
D_BWT.m[d$ts.ages.base > 6 & d$ts.ages.base < 14])
#Make space and layout
png("../Figure09.png", res=600, units="in", width=3, height=3)
par(mar=c(5,5,0.5,0.5), cex=0.75)
##Density plot
smoothScatter(D_BWT, D_d18O_sw, xlab=expression(Delta*"BWT ("*degree*" C)"),
ylab = expression(Delta*delta^{18}*"O"[sw]*" (\u2030, VSMOW)"),
xlim = c(-9,4.5), ylim = c(-1,2), col="white")
#Add contours
contour(DKE, add=TRUE, drawlabels=FALSE, col="grey")
#Colors for plotting the medians
pal = heat.colors(nc)
#Lines showing correlation of medians
#abline(lm15, lty=3, col="grey")
#abline(lm6, lty=3, col="grey")
#Plot the medians
points(D_BWT.m, D_d18O_sw.m, pch=19, col=pal, cex=0.20)
#Legend for the median colorscale
rect(-9.2, 2.05, -3.6, 1.55, col="grey")
points(seq(-8.9,-3.9,length.out = nc), rep(1.65, nc), col=pal, cex=0.6)
a = c(18,12,6,0)
xs = seq(-8.8, -3.9, length.out = 4)
text(xs, 1.75, a, cex=0.7)
text(-6.4, 1.93, "Age (Ma)", cex=0.7)
dev.off()
#These are the posterior samples, needed for all of the below
load("post_lear.RData")
#These first plots use the Lear data, so prep it using the function from helpers.R
d = prep.lear()
##This is the data on which the original interpretations were based
#Data from Lear et al. 2003 and 2015, 'equlibrium offset' of +0.64 removed from
#2003 d18O data. Data only for core levels w/ both Mg/Ca and d18O. d18O values have
#been averaged for levels with multiple observations
dl = read.csv("Lear_combined_interp.csv")
dl_mgca = dl[order(dl$Age.Ma),]
dl_d18O = dl[!is.na(dl$d18O),]
#Shorthand
sl = post.lear$BUGSoutput$sims.list
su = post.lear$BUGSoutput$summary
#Get some indicies used to parse data in su
sims = nrow(sl$BWT)
BWT.start = match("BWT[1]", row.names(su))
d18O.start = match("d18O_sw[1]", row.names(su))
MgCa.start = match("MgCa_sw_m[1]", row.names(su))
#Subset the posterior to retain only base ts steps
BWT = sl$BWT[, ts.ind]
d18Osw = sl$d18O_sw[, ts.ind]
#First calculate the difference of each BWT and d18O_sw value relative to
#the 18Ma value for that posterior draw
#Set aside space
nr = nrow(BWT)
nc = ncol(BWT)
D_BWT = matrix(double(), nrow = nr, ncol = nc)
D_d18O_sw = matrix(double(), nrow = nr, ncol = nc)
#Calculate differences
for(i in 1:nr){
for(j in  1:nc){
D_BWT[i,j] = BWT[i,j] - BWT[i,1]
D_d18O_sw[i,j] = d18Osw[i,j] - d18Osw[i,1]
}
}
#Now calculate the medians of the values obtained above
#Set aside space
D_BWT.m = double()
D_d18O_sw.m = double()
#Get the medians
for(i in 1:nc){
D_BWT.m[i] = median(D_BWT[,i])
D_d18O_sw.m[i] = median(D_d18O_sw[,i])
}
#Matrix gets aweful big so subsample prior to KDE
subs = seq(1, length(D_BWT), by=floor(length(D_BWT)/500000))
#2-d kernal density for the differences
library(MASS)
DKE = kde2d(D_BWT[subs], D_d18O_sw[subs], h=c(0.75, 0.3), n=100)
#Correlation for different periods
lm15 = lm(D_d18O_sw.m[d$ts.ages.base > 15] ~ D_BWT.m[d$ts.ages.base > 15])
lm6 =  lm(D_d18O_sw.m[d$ts.ages.base > 6 & d$ts.ages.base < 14] ~
D_BWT.m[d$ts.ages.base > 6 & d$ts.ages.base < 14])
#Make space and layout
png("../Figure09.png", res=600, units="in", width=3, height=3)
par(mar=c(5,5,0.5,0.5), cex=0.75)
##Density plot
smoothScatter(D_BWT, D_d18O_sw, xlab=expression(Delta*"BWT ("*degree*" C)"),
ylab = expression(Delta*delta^{18}*"O"[sw]*" (\u2030, VSMOW)"),
xlim = c(-9,4.5), ylim = c(-1,2), col="white")
#Add contours
contour(DKE, add=TRUE, drawlabels=FALSE, col="grey")
#Colors for plotting the medians
pal = heat.colors(nc)
#Lines showing correlation of medians
#abline(lm15, lty=3, col="grey")
#abline(lm6, lty=3, col="grey")
#Plot the medians
points(D_BWT.m, D_d18O_sw.m, pch=19, col=pal, cex=0.20)
#Legend for the median colorscale
rect(-9.2, 2.05, -3.6, 1.55, col="grey")
points(seq(-8.9,-3.9,length.out = nc), rep(1.65, nc), col=pal, cex=0.6)
a = c(18,12,6,0)
xs = seq(-8.8, -3.9, length.out = 4)
text(xs, 1.75, a, cex=0.7)
text(-6.4, 1.93, "Age (Ma)", cex=0.7)
dev.off()
#Get index values for base time series
ts.ind = match(d$ts.ages.base, d$ts.ages)
#Subset the posterior to retain only base ts steps
BWT = sl$BWT[, ts.ind]
d18Osw = sl$d18O_sw[, ts.ind]
#First calculate the difference of each BWT and d18O_sw value relative to
#the 18Ma value for that posterior draw
#Set aside space
nr = nrow(BWT)
nc = ncol(BWT)
D_BWT = matrix(double(), nrow = nr, ncol = nc)
D_d18O_sw = matrix(double(), nrow = nr, ncol = nc)
#Calculate differences
for(i in 1:nr){
for(j in  1:nc){
D_BWT[i,j] = BWT[i,j] - BWT[i,1]
D_d18O_sw[i,j] = d18Osw[i,j] - d18Osw[i,1]
}
}
#Now calculate the medians of the values obtained above
#Set aside space
D_BWT.m = double()
D_d18O_sw.m = double()
#Get the medians
for(i in 1:nc){
D_BWT.m[i] = median(D_BWT[,i])
D_d18O_sw.m[i] = median(D_d18O_sw[,i])
}
#Matrix gets aweful big so subsample prior to KDE
subs = seq(1, length(D_BWT), by=floor(length(D_BWT)/500000))
#2-d kernal density for the differences
library(MASS)
DKE = kde2d(D_BWT[subs], D_d18O_sw[subs], h=c(0.75, 0.3), n=100)
#Correlation for different periods
lm15 = lm(D_d18O_sw.m[d$ts.ages.base > 15] ~ D_BWT.m[d$ts.ages.base > 15])
lm6 =  lm(D_d18O_sw.m[d$ts.ages.base > 6 & d$ts.ages.base < 14] ~
D_BWT.m[d$ts.ages.base > 6 & d$ts.ages.base < 14])
#Make space and layout
png("../Figure09.png", res=600, units="in", width=3, height=3)
par(mar=c(5,5,0.5,0.5), cex=0.75)
##Density plot
smoothScatter(D_BWT, D_d18O_sw, xlab=expression(Delta*"BWT ("*degree*" C)"),
ylab = expression(Delta*delta^{18}*"O"[sw]*" (\u2030, VSMOW)"),
xlim = c(-9,4.5), ylim = c(-1,2), col="white")
#Add contours
contour(DKE, add=TRUE, drawlabels=FALSE, col="grey")
#Colors for plotting the medians
pal = heat.colors(nc)
#Lines showing correlation of medians
#abline(lm15, lty=3, col="grey")
#abline(lm6, lty=3, col="grey")
#Plot the medians
points(D_BWT.m, D_d18O_sw.m, pch=19, col=pal, cex=0.20)
#Legend for the median colorscale
rect(-9.2, 2.05, -3.6, 1.55, col="grey")
points(seq(-8.9,-3.9,length.out = nc), rep(1.65, nc), col=pal, cex=0.6)
a = c(18,12,6,0)
xs = seq(-8.8, -3.9, length.out = 4)
text(xs, 1.75, a, cex=0.7)
text(-6.4, 1.93, "Age (Ma)", cex=0.7)
dev.off()
