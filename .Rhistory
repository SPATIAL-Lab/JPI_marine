tok = "a"
i=1
cat("\n")
while(tok != ""){
tok = readline("Enter Sample IDs for unknown samples, return for done: ")
if(tok != "a" && tok != ""){
samples[ns+i,] = NA
samples$shipmentID[ns+i] = samples$shipmentID[ns]
samples$sampleClass[ns+i] = samples$sampleClass[ns]
samples$sampleID[ns+i] = tok
samples$unknownSamples[ns+i] = tok
i = i+1
}
}
View(samples)
for(i in 1:ncol(samples)){for(j in 1:nrow(samples)){if(samples[j,i]==NA)samples[j,i]=""}}
for(i in 1:ncol(samples)){for(j in 1:nrow(samples)){if(samples[j,i]==NA)samples[j,i]=NULL}}
for(i in 1:ncol(samples)){for(j in 1:nrow(samples)){if(samples[j,i]==NA){samples[j,i]=NULL}}}
for(i in 1:ncol(samples)){for(j in 1:nrow(samples)){if(samples[j,i]=="NA"){samples[j,i]=NULL}}}
j = 13
i = 1
if(samples[j,i]=="NA"){samples[j,i]=NULL}
if(is.na(samples[j,i])){samples[j,i]=NULL}
if(is.na(samples[j,i])){samples[j,i]=""}
for(i in 1:ncol(samples)){
for(j in 1:nrow(samples)){
if(is.na(samples[j,i])){samples[j,i]=""}
}
}
#Write receipt form
receipt = data.frame("shipmentID" = samples$shipmentID,
"shipmentReceivedDate" = samples$shipmentReceivedDate,
"receivedBy" = samples$receivedBy,
"sampleID" = samples$sampleID,
"sampleCode"=rep("", nrow(samples)),
"sampleClass" = samples$sampleClass,
"sampleReceived" = samples$sampleReceived,
"acceptedForAnalysis" = samples$acceptedForAnalysis,
"sampleCondition" = samples$sampleCondition,
"unknownSamples" = samples$unknownSamples,
"remarks" = samples$remarks)
fname = paste0("Bowen_Lab/Data_reports/NEON/Shipping/receipt_form_", receipt$shipmentID[1], ".csv")
write.csv(receipt, fname, row.names = FALSE, na = "")
sqlQuery(channel, "DESCRIBE NEON_shipping")
sqlQuery(channel, "DESCRIBE NEON_shipping")
sqlQuery(channel, "DESCRIBE NEON_shipping")
#create channel with filepath to the database
channel = odbcConnect("WIDB")
sqlQuery(channel, "DESCRIBE NEON_shipping")
install.packages("raster")
install.packages("sp")
install.packages("rgdal")
install.packages("ggplot2")
install.packages("devtools")
devtools::install_github("SPATIAL-Lab/isorig", force =T)# install isOrigin package from Github
library(RODBC)
channel = odbcConnect("WIDB")
sqlQuery(channel, "COUNT d2H FROM Water_Isotope_Data")
sqlQuery(channel, "SELECT COUNT(d2H) FROM Water_Isotope_Data")
sqlQuery(channel, "SELECT COUNT(d18O) FROM Water_Isotope_Data")
sqlQuery(channel, "SELECT COUNT(d18O) FROM Water_Isotope_Data WHERE WI_Analysis_Ignore = 0")
sqlQuery(channel, "SELECT COUNT(Sample_ID) FROM Samples")
channel = odbcConnect("WIDB")
sqlQuery(channel, "SELECT COUNT(Sample_ID) FROM Samples")
library(devtools)
devtools::install_github("SPATIAL-Lab/isorig", force=T)
data("naMap")
library(isOrigin)
data("naMap")
data("d2h_world")
d = subOrigData(taxon = c("Homo sapiens"), mask = naMap)
sumary(d)
summary(d)
r = calRaster(dd, d2h_world, naMap)
r = calRaster(d, d2h_world, naMap)
d = d[d$d2H < -75]
d = d[d$d2H < -75,]
r = calRaster(d, d2h_world, naMap)
id = c("A", "B", "C", "D")
d2H = c(-110, -105, -100, -120)
un = data.frame(id,d2H)
asn = pdRaster(r$isoscape.rescale,unknown=un,mask=naMap)
p1 <- c(-100,45,-100,50,-110,50,-110,45,-100,45)
p1 <- matrix(p1, 5,2, byrow = T)
p1 <- Polygon(p1)
p1 <- Polygons(list(p1), "p1")
p2 <- c(-100,40,-100,45,-110,45,-110,40,-100,40)
p2 <- matrix(p2, 5,2, byrow = T)
p2 <- Polygon(p2)
p2 <- Polygons(list(p2), "p2")
p12 <- SpatialPolygons(list(p1,p2),1:2)
pp1 <- c(-100,45)
pp2 <- c(-100,60)
pp12 <- as.data.frame(rbind(pp1,pp2))
fname = "C:/Users/u0133977/Dropbox/Bowen_Lab/Sample_metadata/test"
library(readxl)
library(RODBC)
channel = odbcConnect("WIDB")
Sys.setenv(TZ= "GMT")
if(fname == ""){
projectFile = "Projects.csv"
siteFile = "Sites.csv"
samplesFile = "Samples.csv"
csvImport = 1
} else {
csvImport = 0
}
#####Figure out what needs to be imported
SitesYN = T
SamplesYN = T
ProjectsYN = T
AnalysisYN = T
ClimateYN = T
tmpdat = read_excel(fname, sheet="Samples", col_names = TRUE,
col_types = c("text", "text", "text", "text", "guess",
"numeric", "guess", "numeric", "numeric",
"text", "text", "numeric", "text",
"numeric", "text", "text"))
fname = "C:/Users/u0133977/Dropbox/Bowen_Lab/Sample_metadata/test/test.xlsx"
tmpdat = read_excel(fname, sheet="Samples", col_names = TRUE,
col_types = c("text", "text", "text", "text", "guess",
"numeric", "guess", "numeric", "numeric",
"text", "text", "numeric", "text",
"numeric", "text", "text"))
oddsRatio(asn, p12)
oddsRatio(asn, pp12)
qtlRaster(asn, threshold = 0.7, thresholdType = 1)
qtlRaster(asn, threshold = 0.7, thresholdType = 2)
jointP(asn)
unionP(asn)
install.packages(c("cli", "coda", "digest", "doParallel", "dplyr", "e1071", "expm", "GGally", "glue", "iterators", "maptools", "mcmcplots", "mime", "munsell", "mvtnorm", "openssl", "pillar", "pkgconfig", "progress", "purrr", "R6", "rbacon", "Rcpp", "rjags", "rlang", "rstudioapi", "scales", "spData", "stringi", "stringr", "tidyr", "tidyselect", "utf8"))
install.packages(c("cli", "coda", "digest", "doParallel", "dplyr", "e1071", "expm", "GGally", "glue", "iterators", "maptools", "mcmcplots", "mime", "munsell", "mvtnorm", "openssl", "pillar", "pkgconfig", "progress", "purrr", "R6", "rbacon", "Rcpp", "rjags", "rlang", "rstudioapi", "scales", "spData", "stringi", "stringr", "tidyr", "tidyselect", "utf8"))
install.packages(c("cli", "coda", "digest", "doParallel", "dplyr", "e1071", "expm", "GGally", "glue", "iterators", "maptools", "mcmcplots", "mime", "munsell", "mvtnorm", "openssl", "pillar", "pkgconfig", "progress", "purrr", "R6", "rbacon", "Rcpp", "rjags", "rlang", "rstudioapi", "scales", "spData", "stringi", "stringr", "tidyr", "tidyselect", "utf8"))
library(RODBC)
channel = odbcConnect("WIDB")
d=sqlQuery(channel, "SELECT * FROM Samples WHERE Project_ID = '00099'")
dd = sqlQuery(channel, "SELECT * FROM Samples WHERE Sample_ID LIKE '%GJBMISC18%'")
View(dd)
View(d)
library(RODBC)
channel = odbcConnect("WIDB")
sqlQuery(channel, "UPDATE Samples SET Site_ID = 'GJBMISC18-SITE-103' WHERE Sample_ID = '18-309_GJBMISC18-047'")
sqlQuery(channel, "UPDATE Samples SET Site_ID = 'GJBMISC18-SITE-101' WHERE Sample_ID = '18-309_GJBMISC18-048'")
sqlQuery(channel, "SELECT * FROM Sites WHERE Site_Name = 'Lake Guarda'")
sqlQuery(channel, "UPDATE Sites SET Site_Name = 'Lake Garda' WHERE Site_Name = 'Lake Guarda'")
load("C:/Users/u0133977/Dropbox/HypoMirror/JPI_marine/.RData")
library(R2OpenBUGS)
install.packages("R2OpenBUGS")
library(R2OpenBUGS)
library(coda)
library(rjags)
install.packages("rjags")
install.packages("R2jags")
install.packages("xlsx")
library(rjags)
library(R2jags)
library(xlsx)
setwd("C:/Users/gjbowen/Dropbox/HypoMirror/JPI_marine/")
setwd("C:/Users/u0133977/Dropbox/HypoMirror/JPI_marine/")
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
lines(ts.ages, post$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[1:71, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:71, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:71, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
for(i in 1:nrow(post2$BUGSoutput$sims.list$d18O_sw)){
lines(ts.ages, post$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[72:142, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[72:142, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[72:142, 7], col="red", lty=3)
points(d_o$Age.Ma, rep(-1, nrow(d_o)), pch=21, bg = "white")
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[1:71, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:71, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:71, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
ts.min = 18
ts.max = 11
ts.step = 0.05
ts.ages = seq(18, 11, -0.1)
ts.len = length(ts.ages)
d_o = d[!is.na(d$d18O),]
o_age.ind = round((ts.min - d_o$Age.Ma) / ts.step) + 1
d_mgca = d[!is.na(d$MgCa),]
mgca_age.ind = round((ts.min - d_mgca$Age.Ma) / ts.step) + 1
source("split_temporal.R")
dat = list(nages = ts.len, Age = d_mgca$Age.Ma, MgCa.age.ind = mgca_age.ind, MgCa = d_mgca$MgCa, d18O.age.ind = o_age.ind, d18O = d_o$d18O)
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
ts.len
ts.step = -0.05
ts.min = 18
ts.max = 11
ts.step = -0.05
ts.ages = seq(ts.min, ts.max, ts.step)
ts.len = length(ts.ages)
d_o = d[!is.na(d$d18O),]
o_age.ind = round((ts.min - d_o$Age.Ma) / ts.step) + 1
d_mgca = d[!is.na(d$MgCa),]
mgca_age.ind = round((ts.min - d_mgca$Age.Ma) / ts.step) + 1
source("split_temporal.R")
dat = list(nages = ts.len, Age = d_mgca$Age.Ma, MgCa.age.ind = mgca_age.ind, MgCa = d_mgca$MgCa, d18O.age.ind = o_age.ind, d18O = d_o$d18O)
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
o_age.ind
ts.max = 11
ts.step = 0.05
ts.ages = seq(ts.min, ts.max, -ts.step)
ts.len = length(ts.ages)
d_o = d[!is.na(d$d18O),]
o_age.ind = round((ts.min - d_o$Age.Ma) / ts.step) + 1
d_mgca = d[!is.na(d$MgCa),]
mgca_age.ind = round((ts.min - d_mgca$Age.Ma) / ts.step) + 1
o_age.ind
dat = list(nages = ts.len, Age = d_mgca$Age.Ma, MgCa.age.ind = mgca_age.ind, MgCa = d_mgca$MgCa, d18O.age.ind = o_age.ind, d18O = d_o$d18O)
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[1:71, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:71, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:71, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
lines(ts.ages, post$BUGSoutput$summary[1:141, 5], col="red")
View(BUGSoutput$summary)
View(post$BUGSoutput$summary)
lines(ts.ages, post2$BUGSoutput$summary[1:141, 5], col="red")
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[1:141, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:141, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:141, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
for(i in 1:nrow(post2$BUGSoutput$sims.list$d18O_sw)){
lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[142:281, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[142:281, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[142:281, 7], col="red", lty=3)
points(d_o$Age.Ma, rep(-1, nrow(d_o)), pch=21, bg = "white")
lines(ts.ages, post2$BUGSoutput$summary[142:282, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[142:282, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[142:282, 7], col="red", lty=3)
parameters = c("d18O_sw", "BWT", "d18_sw.ac", "BWT.ac", "d18O_sw.eps.ac", "BWT.eps.ac", "d18O_sw.var", "BWT.var")
install.packages("raster")
parameters = c("d18O_sw", "BWT", "d18_sw.ac", "BWT.ac", "d18O_sw.eps.ac", "BWT.eps.ac", "d18O_sw.var", "BWT.var")
set.seed(19395)
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
post2
Vies(post2$BUGSoutput$summary)
View(post2$BUGSoutput$summary)
.25^2
0.05^2
parameters = c("d18O_sw", "BWT", "d18O_sw.ac", "BWT.ac", "d18O_sw.eps.ac", "BWT.eps.ac", "d18O_sw.var", "BWT.var")
source("split_temporal.R")
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
View(post2$BUGSoutput$summary)
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
lines(ts.ages, post2$BUGSoutput$summary[1:141, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:141, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:141, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
lines(ts.ages, post2$BUGSoutput$summary[142:282, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[142:282, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[142:282, 7], col="red", lty=3)
points(d_o$Age.Ma, rep(-1, nrow(d_o)), pch=21, bg = "white")
source("split_temporal.R")
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[1:141, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:141, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:141, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$d18O_sw)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[142:282, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[142:282, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[142:282, 7], col="red", lty=3)
points(d_o$Age.Ma, rep(-1, nrow(d_o)), pch=21, bg = "white")
View(post2$BUGSoutput$summary)
source("split_temporal.R")
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[1:141, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:141, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:141, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$d18O_sw)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[142:282, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[142:282, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[142:282, 7], col="red", lty=3)
points(d_o$Age.Ma, rep(-1, nrow(d_o)), pch=21, bg = "white")
View(post2$BUGSoutput$summary)
source("split_temporal.R")
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
source("split_temporal.R")
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[1:141, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:141, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:141, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$d18O_sw)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[142:282, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[142:282, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[142:282, 7], col="red", lty=3)
points(d_o$Age.Ma, rep(-1, nrow(d_o)), pch=21, bg = "white")
View(post2$BUGSoutput$summary)
source("split_temporal.R")
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$d18O_sw)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[142:282, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[142:282, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[142:282, 7], col="red", lty=3)
parameters = c("d18O_sw", "BWT", "d18O_sw.eps.ac", "BWT.eps.ac", "d18O_sw.eps.k", "BWT.eps.k", "d18O_sw.eps.theta", "BWT.eps.theta")
source("split_temporal.R")
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
source("split_temporal.R")
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
source("split_temporal.R")
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[1:141, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:141, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:141, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
post2
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[1,], col = rgb(0,0,0, 0.01))
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[1,])
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[2,])
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[3,])
source("split_temporal.R")
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
post2
source("split_temporal.R")
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
post2
source("split_temporal.R")
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
post2
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[1:141, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:141, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:141, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$d18O_sw)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[142:282, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[142:282, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[142:282, 7], col="red", lty=3)
source("split_temporal.R")
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[1:141, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:141, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:141, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$d18O_sw)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[142:282, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[142:282, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[142:282, 7], col="red", lty=3)
source("split_temporal.R")
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[1:141, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:141, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:141, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$d18O_sw)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[142:282, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[142:282, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[142:282, 7], col="red", lty=3)
points(d_o$Age.Ma, rep(-1, nrow(d_o)), pch=21, bg = "white")
parameters = c("d18O_sw", "BWT", "d18O_sw.eps.ac", "BWT.eps.ac", "d18O_sw.var", "BWT.var")
post2
View(poste2)
View(post2)
View(post2$BUGSoutput$summary)
d_mgca$MgCa
parameters = c("d18O_sw", "BWT", "d18O_sw.eps.ac", "BWT.eps.ac", "d18O_sw.var", "BWT.var")
dat = list(nages = ts.len, Age = d_mgca$Age.Ma, MgCa.age.ind = mgca_age.ind, MgCa = d_mgca$MgCa, d18O.age.ind = o_age.ind, d18O = d_o$d18O)
dat
plot(dat$MgCa.age.ind,dat$MgCa)
plot(dat$MgCa.age.ind,dat$MgCa, type="l")
source("split_temporal.R")
t1 = proc.time()
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
proc.time() - t1
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[1:141, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:141, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:141, 7], col="red", lty=3)
for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
}
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
for(i in 1:nrow(post2$BUGSoutput$sims.list$d18O_sw)){
lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[142:282, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[142:282, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[142:282, 7], col="red", lty=3)
points(d_o$Age.Ma, rep(-1, nrow(d_o)), pch=21, bg = "white")
lines(ts.ages, post2$BUGSoutput$summary[144:284, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[144:284, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[144:284, 7], col="red", lty=3)
source("split_temporal.R")
t1 = proc.time()
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
proc.time() - t1
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
lines(ts.ages, post2$BUGSoutput$summary[1:141, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:141, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:141, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
for(i in 1:nrow(post2$BUGSoutput$sims.list$d18O_sw)){
lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
