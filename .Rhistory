##A couple of standard plots of the modeled timeseries
jpeg("T_18O_full.jpg", units="in", width=6, height=7, res=300)
layout(matrix(c(1,2), 2, 1), heights = c(lcm(2.6*2.54), lcm(3.4*2.54)))
par(mai=c(0.2,1,0.2,0.2))
plot(-10, 0, xlab = "", ylab ="Temperature", xlim=c(0,18), ylim=c(-3,11),
axes = FALSE)
axis(1, labels=FALSE)
axis(2)
box()
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, sl$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, su[BWT.start:ts.len, 5], col="red")
lines(ts.ages, su[BWT.start:ts.len, 3], col="red", lty=3)
lines(ts.ages, su[BWT.start:ts.len, 7], col="red", lty=3)
lines(ts.ages, su[BWT.start:ts.len, 4], col="red", lty=2)
lines(ts.ages, su[BWT.start:ts.len, 6], col="red", lty=2)
tp = d_mgca[order(d_mgca$Age.Ma), "Age.Ma"]
points(tp, rep(-3, nrow(d_mgca)), pch=21, bg = "white")
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "A")
#Second panel for seawater d18O
par(mai=c(1,1,0.2,0.2))
plot(-10, 0, xlab = "Age (Ma)", ylab = expression(paste("Seawater ", delta^{18}, "O (\u2030, VSMOW)")),
xlim=c(0,18), ylim=c(2,-1.5))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, sl$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 5], col="red")
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 3], col="red", lty=3)
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 7], col="red", lty=3)
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 4], col="red", lty=2)
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 6], col="red", lty=2)
op = d_o[order(d_o$Age.Ma),"Age.Ma"]
points(op, rep(2, nrow(d_o)), pch=21, bg = "white")
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "B")
dev.off()
##A couple of standard plots of the modeled timeseries
jpeg("T_18O_full.jpg", units="in", width=5, height=5, res=300)
layout(matrix(c(1,2), 2, 1), heights = c(lcm(2.1*2.54), lcm(2.9*2.54)))
par(mai=c(0.2,1,0.2,0.2))
plot(-10, 0, xlab = "", ylab ="Temperature", xlim=c(0,18), ylim=c(-3,11),
axes = FALSE)
axis(1, labels=FALSE)
axis(2)
box()
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, sl$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, su[BWT.start:ts.len, 5], col="red")
lines(ts.ages, su[BWT.start:ts.len, 3], col="red", lty=3)
lines(ts.ages, su[BWT.start:ts.len, 7], col="red", lty=3)
lines(ts.ages, su[BWT.start:ts.len, 4], col="red", lty=2)
lines(ts.ages, su[BWT.start:ts.len, 6], col="red", lty=2)
tp = d_mgca[order(d_mgca$Age.Ma), "Age.Ma"]
points(tp, rep(-3, nrow(d_mgca)), pch=21, bg = "white")
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "A")
#Second panel for seawater d18O
par(mai=c(1,1,0.2,0.2))
plot(-10, 0, xlab = "Age (Ma)", ylab = expression(paste("Seawater ", delta^{18}, "O (\u2030, VSMOW)")),
xlim=c(0,18), ylim=c(2,-1.5))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, sl$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 5], col="red")
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 3], col="red", lty=3)
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 7], col="red", lty=3)
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 4], col="red", lty=2)
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 6], col="red", lty=2)
op = d_o[order(d_o$Age.Ma),"Age.Ma"]
points(op, rep(2, nrow(d_o)), pch=21, bg = "white")
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "B")
dev.off()
jpeg("T_18O_full.jpg", units="in", width=5, height=5, res=300)
layout(matrix(c(1,2), 2, 1), heights = c(lcm(2.1*2.54), lcm(2.9*2.54)))
par(mai=c(0.2,1,0.2,0.2), cex=0.85)
plot(-10, 0, xlab = "", ylab ="Temperature", xlim=c(0,18), ylim=c(-3,11),
axes = FALSE)
axis(1, labels=FALSE)
axis(2)
box()
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, sl$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, su[BWT.start:ts.len, 5], col="red")
lines(ts.ages, su[BWT.start:ts.len, 3], col="red", lty=3)
lines(ts.ages, su[BWT.start:ts.len, 7], col="red", lty=3)
lines(ts.ages, su[BWT.start:ts.len, 4], col="red", lty=2)
lines(ts.ages, su[BWT.start:ts.len, 6], col="red", lty=2)
tp = d_mgca[order(d_mgca$Age.Ma), "Age.Ma"]
points(tp, rep(-3, nrow(d_mgca)), pch=21, bg = "white")
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "A")
#Second panel for seawater d18O
par(mai=c(1,1,0.2,0.2))
plot(-10, 0, xlab = "Age (Ma)", ylab = expression(paste("Seawater ", delta^{18}, "O (\u2030, VSMOW)")),
xlim=c(0,18), ylim=c(2,-1.5))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, sl$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 5], col="red")
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 3], col="red", lty=3)
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 7], col="red", lty=3)
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 4], col="red", lty=2)
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 6], col="red", lty=2)
op = d_o[order(d_o$Age.Ma),"Age.Ma"]
points(op, rep(2, nrow(d_o)), pch=21, bg = "white")
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "B")
dev.off()
png("T_18O_full.png", units="in", width=5, height=5, res=300)
layout(matrix(c(1,2), 2, 1), heights = c(lcm(2.1*2.54), lcm(2.9*2.54)))
par(mai=c(0.2,1,0.2,0.2), cex=0.85)
plot(-10, 0, xlab = "", ylab ="Temperature", xlim=c(0,18), ylim=c(-3,11),
axes = FALSE)
axis(1, labels=FALSE)
axis(2)
box()
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, sl$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, su[BWT.start:ts.len, 5], col="red")
lines(ts.ages, su[BWT.start:ts.len, 3], col="red", lty=3)
lines(ts.ages, su[BWT.start:ts.len, 7], col="red", lty=3)
#lines(ts.ages, su[BWT.start:ts.len, 4], col="red", lty=2)
#lines(ts.ages, su[BWT.start:ts.len, 6], col="red", lty=2)
tp = d_mgca[order(d_mgca$Age.Ma), "Age.Ma"]
points(tp, rep(-3, nrow(d_mgca)), pch=21, bg = "white")
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "A")
#Second panel for seawater d18O
par(mai=c(1,1,0.2,0.2))
plot(-10, 0, xlab = "Age (Ma)", ylab = expression(paste("Seawater ", delta^{18}, "O (\u2030, VSMOW)")),
xlim=c(0,18), ylim=c(2,-1.5))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, sl$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 5], col="red")
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 3], col="red", lty=3)
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 7], col="red", lty=3)
#lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 4], col="red", lty=2)
#lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 6], col="red", lty=2)
op = d_o[order(d_o$Age.Ma),"Age.Ma"]
points(op, rep(2, nrow(d_o)), pch=21, bg = "white")
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "B")
dev.off()
png("calibration.png", res = 300, units = "in", width = 8, height = 4)
layout(matrix(c(1,2,3,4,5,6,7,8), nrow = 2, ncol = 4, byrow=TRUE))
par(mai=c(0.5,0.5,0.1,0.1))
xoff = 2.3
#MgCa calibration parms
plotd(sl$lc[,1], col="red")
lined(rnorm(100000, 1.5, 0.1))
title(xlab=expression(paste(alpha[1])), line = xoff)
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "A")
plotd(sl$lc[,2], col="red", ylab="")
lined(rnorm(100000, 0.1, 0.01))
title(xlab=expression(paste(alpha[2])), line = xoff)
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "B")
plotd(sl$lc[,3], col="red", ylab="")
lined(rnorm(100000, -0.02, 0.03))
title(xlab=expression(paste(alpha[3])), line = xoff)
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "C")
plotd(sqrt(1/(sl$MgCa_calib.pre)), col="red", xlim=c(0.05,0.25), ylab="")
lined(sqrt(1/(rgamma(100000, 2, 1/30))))
title(xlab=expression(paste(sigma["MgCaf"])), line = xoff)
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "D")
#d18O calibration parms
plotd(sl$a[,1], col="red")
lined(rnorm(100000, 3.32, 0.02))
title(xlab=expression(paste(beta[1])), line = xoff)
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "E")
plotd(sl$a[,2], col="red", ylab="")
lined(rnorm(100000, -0.237, 0.01))
title(xlab=expression(paste(beta[2])), line = xoff)
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "F")
plotd(sl$a[,3], col="red", ylab="")
lined(rnorm(100000, 0.001, 0.0005))
title(xlab=expression(paste(beta[3])), line = xoff)
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "G")
plotd(sqrt(1/(sl$d18O_calib.pre)), col="red", xlim=c(0.05,0.7), ylab="")
lined(sqrt(1/(sl$d18O_calib.pre.2)), col="red", lty=2)
lined(sqrt(1/(rgamma(100000, 3, 1/30))))
lined(sqrt(1/(rgamma(100000, 6, 1))), lty=2)
title(xlab=expression(paste(sigma[paste(delta, "18Of")])), line = xoff)
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "H")
dev.off()
png("MgCa_sw_full.png", units="in", width=5, height=2.75, res=300)
par(mar=c(4,4,1,1), cex=0.85)
plot(-10, 0, xlab="Age (Ma)", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, sl$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
lines(mgca_ts.ages, su[MgCa.start:(MgCa.start+mgca_ts.len-1), 5], col="red")
lines(mgca_ts.ages, su[MgCa.start:(MgCa.start+mgca_ts.len-1), 3], col="red", lty=3)
lines(mgca_ts.ages, su[MgCa.start:(MgCa.start+mgca_ts.len-1), 7], col="red", lty=3)
#lines(mgca_ts.ages, su[MgCa.start:(MgCa.start+mgca_ts.len-1), 4], col="red", lty=2)
#lines(mgca_ts.ages, su[MgCa.start:(MgCa.start+mgca_ts.len-1), 6], col="red", lty=2)
points(d_mgca_sw$Age, d_mgca_sw$MgCa, pch=21, bg = "white")
points(d_o$Age.Ma, rep(1, nrow(d_o)), pch=21, bg = "black")
dev.off()
png("MgCa_sw_full.png", units="in", width=5, height=2.75, res=300)
par(mar=c(4,4,1,1), cex=0.85)
plot(-10, 0, xlab="Age (Ma)", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, sl$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
lines(mgca_ts.ages, su[MgCa.start:(MgCa.start+mgca_ts.len-1), 5], col="red")
lines(mgca_ts.ages, su[MgCa.start:(MgCa.start+mgca_ts.len-1), 3], col="red", lty=3)
lines(mgca_ts.ages, su[MgCa.start:(MgCa.start+mgca_ts.len-1), 7], col="red", lty=3)
#lines(mgca_ts.ages, su[MgCa.start:(MgCa.start+mgca_ts.len-1), 4], col="red", lty=2)
#lines(mgca_ts.ages, su[MgCa.start:(MgCa.start+mgca_ts.len-1), 6], col="red", lty=2)
points(d_mgca_sw$Age, d_mgca_sw$MgCa, pch=21, bg = "white")
points(d_mgca$Age.Ma, rep(1, nrow(d_mgca)), pch=21, bg = "black")
points(d_mgca_calib$Age, rep(1, nrow(d_mgca_calib)), pch=21, bg = "grey")
dev.off()
#####
#Let's look at covariance for these parms
png("calibration_covar.png", res=300, units="in", width=6, height=4)
layout(matrix(c(1,2,3,4,5,6), nrow=2, byrow=TRUE))
smoothScatter(sl$lc[,1], sl$lc[,2], xlab=expression(paste(alpha[1])), ylab=expression(paste(alpha[2])))
smoothScatter(sl$lc[,1], sl$lc[,3], xlab=expression(paste(alpha[1])), ylab=expression(paste(alpha[3])))
smoothScatter(sl$lc[,2], sl$lc[,3], xlab=expression(paste(alpha[2])), ylab=expression(paste(alpha[3])))
smoothScatter(sl$a[,1], sl$a[,2], xlab=expression(paste(beta[1])), ylab=expression(paste(beta[2])))
smoothScatter(sl$a[,1], sl$a[,3], xlab=expression(paste(beta[1])), ylab=expression(paste(beta[3])))
smoothScatter(sl$a[,2], sl$a[,3], xlab=expression(paste(beta[2])), ylab=expression(paste(beta[3])))
dev.off()
png("calibration_covar.png", res=300, units="in", width=6, height=4)
layout(matrix(c(1,2,3,4,5,6), nrow=2, byrow=TRUE))
par(mar=c(3,3,0.2,0.2))
smoothScatter(sl$lc[,1], sl$lc[,2], xlab=expression(paste(alpha[1])), ylab=expression(paste(alpha[2])))
smoothScatter(sl$lc[,1], sl$lc[,3], xlab=expression(paste(alpha[1])), ylab=expression(paste(alpha[3])))
smoothScatter(sl$lc[,2], sl$lc[,3], xlab=expression(paste(alpha[2])), ylab=expression(paste(alpha[3])))
smoothScatter(sl$a[,1], sl$a[,2], xlab=expression(paste(beta[1])), ylab=expression(paste(beta[2])))
smoothScatter(sl$a[,1], sl$a[,3], xlab=expression(paste(beta[1])), ylab=expression(paste(beta[3])))
smoothScatter(sl$a[,2], sl$a[,3], xlab=expression(paste(beta[2])), ylab=expression(paste(beta[3])))
dev.off()
png("calibration_covar.png", res=300, units="in", width=6, height=4)
layout(matrix(c(1,2,3,4,5,6), nrow=2, byrow=TRUE))
par(mar=c(5,5,0.2,0.2))
smoothScatter(sl$lc[,1], sl$lc[,2], xlab=expression(paste(alpha[1])), ylab=expression(paste(alpha[2])))
smoothScatter(sl$lc[,1], sl$lc[,3], xlab=expression(paste(alpha[1])), ylab=expression(paste(alpha[3])))
smoothScatter(sl$lc[,2], sl$lc[,3], xlab=expression(paste(alpha[2])), ylab=expression(paste(alpha[3])))
smoothScatter(sl$a[,1], sl$a[,2], xlab=expression(paste(beta[1])), ylab=expression(paste(beta[2])))
smoothScatter(sl$a[,1], sl$a[,3], xlab=expression(paste(beta[1])), ylab=expression(paste(beta[3])))
smoothScatter(sl$a[,2], sl$a[,3], xlab=expression(paste(beta[2])), ylab=expression(paste(beta[3])))
dev.off()
png("calibration_covar.png", res=300, units="in", width=6, height=4)
layout(matrix(c(1,2,3,4,5,6), nrow=2, byrow=TRUE))
par(mar=c(5,5,0.2,0.2))
smoothScatter(sl$lc[,1], sl$lc[,2], xlab=expression(paste(alpha[1])), ylab=expression(paste(alpha[2])))
xl = par("usr")[2]-(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "A")
smoothScatter(sl$lc[,1], sl$lc[,3], xlab=expression(paste(alpha[1])), ylab=expression(paste(alpha[3])))
xl = par("usr")[2]-(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "B")
smoothScatter(sl$lc[,2], sl$lc[,3], xlab=expression(paste(alpha[2])), ylab=expression(paste(alpha[3])))
xl = par("usr")[2]-(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "C")
smoothScatter(sl$a[,1], sl$a[,2], xlab=expression(paste(beta[1])), ylab=expression(paste(beta[2])))
xl = par("usr")[2]-(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "D")
smoothScatter(sl$a[,1], sl$a[,3], xlab=expression(paste(beta[1])), ylab=expression(paste(beta[3])))
xl = par("usr")[2]-(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "E")
smoothScatter(sl$a[,2], sl$a[,3], xlab=expression(paste(beta[2])), ylab=expression(paste(beta[3])))
xl = par("usr")[2]-(par("usr")[2]-par("usr")[1])/15
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "F")
dev.off()
smoothScatter(sl$BWT.pre, sl$BWT.eps.ac)
smoothScatter(sl$d18O_sw.pre, sl$d18O_sw.eps.ac)
smoothScatter(sl$MgCa_sw_m.pre, sl$MgCa_sw_m.eps.ac)
smoothScatter(sl$BWT, sl$d18O_sw)
plot(-10, 0, xlab = "Age (Ma)", ylab = expression(paste(delta^{18}, "O[sw]", "(\u2030, VSMOW)")),
xlim=c(0,18), ylim=c(2,-1.5))
plot(-10, 0, xlab = "Age (Ma)", ylab = expression(paste(delta^{18}, "O", [sw], "(\u2030, VSMOW)")),
xlim=c(0,18), ylim=c(2,-1.5))
plot(-10, 0, xlab = "Age (Ma)", ylab = expression(delta^{18}*"O"[sw]*"(\u2030, VSMOW)"),
xlim=c(0,18), ylim=c(2,-1.5))
plot(-10, 0, xlab = "Age (Ma)", ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"),
xlim=c(0,18), ylim=c(2,-1.5))
##This is kind of cool, BWT and d18Osw covariation across all sims
smoothScatter(sl$BWT, sl$d18O_sw, xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
png("T_18O_full.png", units="in", width=5, height=5, res=300)
layout(matrix(c(1,2), 2, 1), heights = c(lcm(2.1*2.54), lcm(2.9*2.54)))
par(mai=c(0.2,1,0.2,0.2), cex=0.85)
plot(-10, 0, xlab = "", ylab =xlab=expression("BWT ("*degree*" C)"),
xlim=c(0,18), ylim=c(-3,11), axes = FALSE)
axis(1, labels=FALSE)
axis(2)
box()
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, sl$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, su[BWT.start:ts.len, 5], col="red")
lines(ts.ages, su[BWT.start:ts.len, 3], col="red", lty=3)
lines(ts.ages, su[BWT.start:ts.len, 7], col="red", lty=3)
#lines(ts.ages, su[BWT.start:ts.len, 4], col="red", lty=2)
#lines(ts.ages, su[BWT.start:ts.len, 6], col="red", lty=2)
tp = d_mgca[order(d_mgca$Age.Ma), "Age.Ma"]
points(tp, rep(-3, nrow(d_mgca)), pch=21, bg = "white")
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "A")
#Second panel for seawater d18O
par(mai=c(1,1,0.2,0.2))
plot(-10, 0, xlab = "Age (Ma)", ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"),
xlim=c(0,18), ylim=c(2,-1.5))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, sl$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 5], col="red")
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 3], col="red", lty=3)
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 7], col="red", lty=3)
#lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 4], col="red", lty=2)
#lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 6], col="red", lty=2)
op = d_o[order(d_o$Age.Ma),"Age.Ma"]
points(op, rep(2, nrow(d_o)), pch=21, bg = "white")
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "B")
dev.off()
##A couple of standard plots of the modeled timeseries
png("T_18O_full.png", units="in", width=5, height=5, res=300)
layout(matrix(c(1,2), 2, 1), heights = c(lcm(2.1*2.54), lcm(2.9*2.54)))
par(mai=c(0.2,1,0.2,0.2), cex=0.85)
plot(-10, 0, xlab = "", ylab =xlab=expression("BWT ("*degree*" C)"),
xlim=c(0,18), ylim=c(-3,11), axes = FALSE)
plot(-10, 0, xlab = "", ylab =expression("BWT ("*degree*" C)"),
xlim=c(0,18), ylim=c(-3,11), axes = FALSE)
axis(1, labels=FALSE)
axis(2)
box()
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, sl$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, su[BWT.start:ts.len, 5], col="red")
lines(ts.ages, su[BWT.start:ts.len, 3], col="red", lty=3)
lines(ts.ages, su[BWT.start:ts.len, 7], col="red", lty=3)
#lines(ts.ages, su[BWT.start:ts.len, 4], col="red", lty=2)
#lines(ts.ages, su[BWT.start:ts.len, 6], col="red", lty=2)
tp = d_mgca[order(d_mgca$Age.Ma), "Age.Ma"]
points(tp, rep(-3, nrow(d_mgca)), pch=21, bg = "white")
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "A")
#Second panel for seawater d18O
par(mai=c(1,1,0.2,0.2))
plot(-10, 0, xlab = "Age (Ma)", ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"),
xlim=c(0,18), ylim=c(2,-1.5))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, sl$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 5], col="red")
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 3], col="red", lty=3)
lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 7], col="red", lty=3)
#lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 4], col="red", lty=2)
#lines(ts.ages, su[d18O.start:(d18O.start+ts.len-1), 6], col="red", lty=2)
op = d_o[order(d_o$Age.Ma),"Age.Ma"]
points(op, rep(2, nrow(d_o)), pch=21, bg = "white")
xl = par("usr")[1]+(par("usr")[2]-par("usr")[1])/25
yl = par("usr")[4]-(par("usr")[4]-par("usr")[3])/15
text(xl, yl, "B")
dev.off()
##This is kind of cool, BWT and d18Osw covariation across all sims
png("env_covar.png", res=300, units="in", width=3, height=3)
par(mar=c(4,4,0.5,0.5))
smoothScatter(sl$BWT, sl$d18O_sw, xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
dev.off()
png("env_covar.png", res=300, units="in", width=3, height=3)
par(mar=c(4,4,0.5,0.5), cex=0.7)
smoothScatter(sl$BWT, sl$d18O_sw, xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
dev.off()
png("env_covar.png", res=300, units="in", width=3, height=3)
par(mar=c(5,5,0.5,0.5), cex=0.7)
smoothScatter(sl$BWT, sl$d18O_sw, xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
dev.off()
par("usr"[1])
png("env_covar.png", res=300, units="in", width=3, height=3)
par(mar=c(5,5,0.5,0.5), cex=0.7)
smoothScatter(sl$BWT, sl$d18O_sw, ylim = c(2.85, -2.25)
xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
dev.off()
smoothScatter(sl$BWT, sl$d18O_sw, ylim = c(2.85, -2.25),
xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
smoothScatter(sl$BWT, sl$d18O_sw, ylim = c(2.85, -2.25),
xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
arrows(6,-1,5.5,0.2)
arrows(6,-1,5.5,0.2, length=0.1, code=1)
arrows(6,-1,5.5,0.2, length=0.1, code=3)
arrows(6,-1,5.5,0.2, length=0.1, code=4)
arrows(6,-1,5.2,0.3, length=0.1, col="red")
arrows(6,-0.7,5.2,0.1, length=0.1, col="red")
smoothScatter(sl$BWT, sl$d18O_sw, ylim = c(2.85, -2.25),
xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
arrows(5.9,-0.6,5.2,0.1, length=0.1, col="red")
arrows(5.2,0.1,5.9,1.1, length=0.1, col="red")
lines(5.9,1.1,4,0.4, col="red")
lines(c(5.9,1.1),c(4,0.4), col="red")
lines(c(5.9,4.4),c(1.1,0.4), col="red")
lines(c(5.9,4),c(1.1,0.5), col="red")
lines(c(5.9,3.5),c(1.1,0.5), col="red")
lines(c(5.9,3.5),c(1.1,0.6), col="red")
lines(c(5.9,3.3),c(1.1,0.5), col="red")
arrows(3.3,0.5,0.2,0.3)
arrows(3.3,0.5,0.2,0.3, length=0.1, col="red")
arrows(3.3,0.5,-0.2,0.3, length=0.1, col="red")
arrows(3.3,0.5,-0.2,0.35, length=0.1, col="red")
png("env_covar.png", res=300, units="in", width=3, height=3)
par(mar=c(5,5,0.5,0.5), cex=0.7)
smoothScatter(sl$BWT, sl$d18O_sw, ylim = c(2.85, -2.25),
xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
arrows(5.9,-0.6,5.2,0.1, length=0.1, col="red")
arrows(5.2,0.1,5.9,1.1, length=0.1, col="red")
lines(c(5.9,3.3),c(1.1,0.5), col="red")
arrows(3.3,0.5,-0.2,0.35, length=0.1, col="red")
dev.off()
png("env_covar.png", res=300, units="in", width=3, height=3)
par(mar=c(5,5,0.5,0.5), cex=0.7)
smoothScatter(sl$BWT, sl$d18O_sw, ylim = c(2.85, -2.25),
xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
lines(c(5.9,5.2,5.9,1.1), c(-0.6,0.1,1.1,0.5), length=0.1, col="red")
arrows(3.3,0.5,-0.2,0.35, length=0.05, col="red")
dev.off()
png("env_covar.png", res=300, units="in", width=3, height=3)
par(mar=c(5,5,0.5,0.5), cex=0.7)
smoothScatter(sl$BWT, sl$d18O_sw, ylim = c(2.85, -2.25),
xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
lines(c(5.9,5.2,5.9,3.3), c(-0.6,0.1,1.1,0.5), col="red")
arrows(3.3,0.5,-0.2,0.35, length=0.05, col="red")
dev.off()
png("env_covar.png", res=300, units="in", width=3, height=3)
par(mar=c(5,5,0.5,0.5), cex=0.75)
smoothScatter(sl$BWT, sl$d18O_sw, ylim = c(2.85, -2.25),
xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
lines(c(5.9,5.2,5.9,3.3), c(-0.6,0.1,1.1,0.5), col="red")
arrows(3.3,0.5,-0.2,0.35, length=0.05, col="red")
dev.off()
smoothScatter(sl$BWT, sl$d18O_sw, xlim = c(-4, 9), ylim = c(2, -1.7),
xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
##This is kind of cool, BWT and d18Osw covariation across all sims
png("env_covar.png", res=300, units="in", width=3, height=3)
par(mar=c(5,5,0.5,0.5), cex=0.75)
smoothScatter(sl$BWT, sl$d18O_sw, xlim = c(-3, 9), ylim = c(2, -1.5),
xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
lines(c(5.9,5.2,5.9,3.3), c(-0.6,0.1,1.1,0.5), col="red")
arrows(3.3,0.5,-0.2,0.35, length=0.05, col="red")
dev.off()
png("env_covar.png", res=300, units="in", width=3, height=3)
par(mar=c(5,5,0.5,0.5), cex=0.75)
smoothScatter(sl$BWT, sl$d18O_sw, xlim = c(-3, 9), ylim = c(2, -1.5),
xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
lines(c(5.9,5.2,5.9,3.3), c(-0.6,0.1,1.1,0.5))
arrows(3.3,0.5,-0.2,0.35, length=0.05)
dev.off()
png("env_covar.png", res=300, units="in", width=3, height=3)
par(mar=c(5,5,0.5,0.5), cex=0.75)
smoothScatter(sl$BWT, sl$d18O_sw, xlim = c(-3, 9), ylim = c(2, -1.5),
xlab=expression("BWT ("*degree*" C)"),
ylab = expression(delta^{18}*"O"[sw]*" (\u2030, VSMOW)"))
lines(c(5.9,5.2,5.9,3.3), c(-0.6,0.1,1.1,0.5), col="grey")
arrows(3.3,0.5,-0.2,0.35, length=0.05, col="grey")
dev.off()
