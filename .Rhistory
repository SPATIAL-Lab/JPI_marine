lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 7], col="red", lty=3)
points(d_o$Age.Ma, rep(1.25, nrow(d_o)), pch=21, bg = "white")
#Get some indicies
sims = nrow(post2$BUGSoutput$sims.list$BWT)
BWT.start = match("BWT[1]", row.names(post2$BUGSoutput$summary))
d18O.start = match("d18O_sw[1]", row.names(post2$BUGSoutput$summary))
MgCa.start = match("MgCa_sw_m[1]", row.names(post2$BUGSoutput$summary))
plot(-10, 0, xlab="Age", ylab ="Temperature", xlim=c(0,18), ylim=c(-3,11))
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
}
dev.off()
plot(-10, 0, xlab="Age", ylab ="Temperature", xlim=c(0,18), ylim=c(-3,11))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(-3, nrow(d_mgca)), pch=21, bg = "white")
plot(-10, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(0,18), ylim=c(1.25,-2))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 7], col="red", lty=3)
points(d_o$Age.Ma, rep(1.25, nrow(d_o)), pch=21, bg = "white")
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, post2$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 5], col="red")
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 3], col="red", lty=3)
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 7], col="red", lty=3)
points(d_mgca_sw$Age, d_mgca_sw$MgCa, pch=21, bg = "white")
points(d_o$Age.Ma, rep(1, nrow(d_o)), pch=21, bg = "black")
traceplot(post2$BUGSoutput, varname = "MgCa_sw.m[105]")
traceplot(post2$BUGSoutput, varname = "MgCa_sw.m")
plot(density(post2$BUGSoutput$sims.list$MgCa_sw_m.eps.ac))
plot(density(post2$BUGSoutput$sims.list$MgCa_sw_m.var))
dada = rgamma(10000, 10000, 0.01)
mean(dada)
mean(1/dada)
dada = rgamma(10000, 25, 0.01)
mean(1/dada)
mean(dada)
dada = rgamma(10000, 25, 0.1)
dada = rgamma(10000, 10, 0.1)
mean(dada)
sd(dada)
plot(density(rgamma(10000, 10, 0.1)))
dev.off()
plot(density(rgamma(10000, 10, 0.1)))
plot(density(1/rgamma(10000, 10, 0.1)))
##Parameters to be saved
parameters = c("d18O_sw", "BWT", "BWT.eps.ac", "BWT.var", "d18O_sw.eps.ac", "d18O_sw.var",
"lc", "MgCa_calib.var", "a", "d18O_calib.var", "d18O_calib.sd.off",
"MgCa_sw_m", "MgCa_sw_m.pre", "MgCa_sw_m.eps.ac")
t1 = proc.time()
post2 = jags.parallel(model.file = "split_temporal.R", parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10000, n.thin = 25)
proc.time() - t1
t1 = proc.time()
post2 = jags.parallel(model.file = "split_temporal.R", parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10000, n.thin = 25)
proc.time() - t1
View(post2$BUGSoutput$summary)
sims = nrow(post2$BUGSoutput$sims.list$BWT)
BWT.start = match("BWT[1]", row.names(post2$BUGSoutput$summary))
d18O.start = match("d18O_sw[1]", row.names(post2$BUGSoutput$summary))
MgCa.start = match("MgCa_sw_m[1]", row.names(post2$BUGSoutput$summary))
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, post2$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 5], col="red")
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 3], col="red", lty=3)
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 7], col="red", lty=3)
points(d_mgca_sw$Age, d_mgca_sw$MgCa, pch=21, bg = "white")
points(d_o$Age.Ma, rep(1, nrow(d_o)), pch=21, bg = "black")
mg_mod = "model {
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, MgCa_sw_m.pre)
}
MgCa_sw_m.eps[1] ~ dnorm(0, MgCa_sw_m.pre)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.9, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.k, 1 / MgCa_sw_m.pre.theta)
MgCa_sw_m.pre.k = 10
MgCa_sw_m.pre.theta = 0.1
}"
parameters = c("MgCa_sw_m", "MgCa_sw_m.pre", "MgCa_sw_m.eps.ac")
##Data to pass to BUGS model
dat = list(MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma)
mg_post = jags(model.file = textConnection("mg_mod"), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10000, n.thin = 25)
mg_mod = " model {
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, MgCa_sw_m.pre)
}
MgCa_sw_m.eps[1] ~ dnorm(0, MgCa_sw_m.pre)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.9, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.k, 1 / MgCa_sw_m.pre.theta)
MgCa_sw_m.pre.k = 10
MgCa_sw_m.pre.theta = 0.1
}"
parameters = c("MgCa_sw_m", "MgCa_sw_m.pre", "MgCa_sw_m.eps.ac")
##Data to pass to BUGS model
dat = list(MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma)
mg_post = jags(model.file = textConnection("mg_mod"), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10000, n.thin = 25)
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10000, n.thin = 25)
##Data to pass to BUGS model
dat = list(nmgca.ages = mgca_ts.len, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma)
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10000, n.thin = 25)
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 1000, n.thin = 25)
mg_mod = " model {
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, MgCa_sw_m.pre)
}
MgCa_sw_m.eps[1] ~ dnorm(0, MgCa_sw_m.pre)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.9, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.k, 1 / MgCa_sw_m.pre.theta)
MgCa_sw_m.pre.k = 10
MgCa_sw_m.pre.theta = 0.1
}"
##Data to pass to BUGS model
dat = list(nmgca.ages = mgca_ts.len, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma)
##Data to pass to BUGS model
dat = list(nmgca.ages = mgca_ts.len, MgCa_sw.age.ind = mgca_sw_age.ind, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma)
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 1000, n.thin = 25)
View(mg_post$BUGSoutput$summary)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10000, n.thin = 25)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
mg_mod = " model {
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, MgCa_sw_m.pre)
}
MgCa_sw_m.eps[1] ~ dnorm(0, MgCa_sw_m.pre)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.5, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.k, 1 / MgCa_sw_m.pre.theta)
MgCa_sw_m.pre.k = 10
MgCa_sw_m.pre.theta = 0.1
}"
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10000, n.thin = 25)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
mg_mod = " model {
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, MgCa_sw_m.pre)
}
MgCa_sw_m.eps[1] ~ dnorm(0, MgCa_sw_m.pre)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.5, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.k, 1 / MgCa_sw_m.pre.theta)
MgCa_sw_m.pre.k = 100
MgCa_sw_m.pre.theta = 0.1
}"
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10000, n.thin = 25)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
mg_mod = " model {
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, MgCa_sw_m.pre)
}
MgCa_sw_m.eps[1] ~ dnorm(0, MgCa_sw_m.pre)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.5, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.k, 1 / MgCa_sw_m.pre.theta)
MgCa_sw_m.pre.k = 1000
MgCa_sw_m.pre.theta = 0.1
}"
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10000, n.thin = 25)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
?jags
mg_mod = " model {
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, MgCa_sw_m.pre)
}
MgCa_sw_m.eps[1] ~ dnorm(0, MgCa_sw_m.pre)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.5, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.k, 1 / MgCa_sw_m.pre.theta)
MgCa_sw_m.pre.k = 10000
MgCa_sw_m.pre.theta = 0.1
}"
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10000, n.thin = 25)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
View(mg_mod$BUGSoutput$summary)
View(mg_post$BUGSoutput$summary)
dada = rgamma(10000, 10000, 0.1)
mean(dada)
plot(density(mg_post$BUGSoutput$sims.list$MgCa_sw_m.pre))
lines(density(rgamma(10000, 10000, 0.1)))
plot(density(rgamma(10000, 10000, 0.1)))
traceplot(mg_post$BUGSoutput, varname="MgCa_sw_m.pre")
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10, n.thin = 25)
traceplot(mg_post$BUGSoutput, varname="MgCa_sw_m.pre")
mg_mod = " model {
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, MgCa_sw_m.pre)
}
MgCa_sw_m.eps[1] ~ dnorm(0, MgCa_sw_m.pre)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.5, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.k, 1 / MgCa_sw_m.pre.theta)
MgCa_sw_m.pre.k = 10000
MgCa_sw_m.pre.theta = 0.5
}"
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10, n.thin = 25)
traceplot(mg_post$BUGSoutput, varname="MgCa_sw_m.pre")
##Set up timeseries for MgCa_sw modeling
mgca_ts.min = 110
mgca_ts.max = 0
mgca_ts.step = 5
mgca_ts.ages = seq(mgca_ts.min, mgca_ts.max, -mgca_ts.step)
mgca_ts.len = length(mgca_ts.ages)
##Age index for seawater MgCa samples
mgca_sw_age.ind = round((mgca_ts.min - d_mgca_sw$Age) / mgca_ts.step) + 1
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10, n.thin = 25)
##Data to pass to BUGS model
dat = list(nmgca.ages = mgca_ts.len, MgCa_sw.age.ind = mgca_sw_age.ind, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma)
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10, n.thin = 25)
traceplot(mg_post$BUGSoutput, varname="MgCa_sw_m.pre")
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
dev.off()
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
mg_mod = " model {
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, MgCa_sw_m.pre)
}
MgCa_sw_m.eps[1] ~ dnorm(0, MgCa_sw_m.pre)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.5, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.k, 1 / MgCa_sw_m.pre.theta)
MgCa_sw_m.pre.k = 1000
MgCa_sw_m.pre.theta = 0.1
}"
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10, n.thin = 25)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
traceplot(mg_post$BUGSoutput, varname="MgCa_sw_m.pre")
traceplot(mg_post$BUGSoutput, varname="MgCa_sw_m")
dev.off()
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
parameters = c("MgCa_sw_m", "MgCa_sw_m.pre", "MgCa_sw_m.eps.ac", "MgCa_sw_m.eps")
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
traceplot(mg_post$BUGSoutput, varname = "MgCa_sw_m.eps")
mean(1/dada)
sd(1/dada)
dada = rgamma(10000, 1000, 0.1)
mean(1/dada)
mg_mod = " model {
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, MgCa_sw_m.pre)
}
MgCa_sw_m.eps[1] ~ dnorm(0, MgCa_sw_m.pre)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.9, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.k, 1 / MgCa_sw_m.pre.theta)
MgCa_sw_m.pre.k = 1000
MgCa_sw_m.pre.theta = 0.1
}"
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
dev.off()
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
traceplot(mg_post$BUGSoutput, varname = "MgCa_sw_m.eps")
View(mg_post$BUGSoutput$summary)
##Set up timeseries for MgCa_sw modeling
mgca_ts.min = 110
mgca_ts.max = 0
mgca_ts.step = 5
mgca_ts.ages = seq(mgca_ts.min, mgca_ts.max, -mgca_ts.step)
mgca_ts.len = length(mgca_ts.ages)
##Age index for seawater MgCa samples
mgca_sw_age.ind = round((mgca_ts.min - d_mgca_sw$Age) / mgca_ts.step) + 1
##Add age seawater MgCa TS indicies for MgCa foram data
mgca_age.ind.sw = round((mgca_ts.min - d_mgca$Age.Ma) / mgca_ts.step) + 1
mgca_age.ind.all = matrix(c(mgca_age.ind, mgca_age.ind.sw), ncol = 2)
##Read in MgCa calibration dataset
d_mgca_calib = read.csv("mgca_calib.csv")
##Age index for MgCa calibration samples
mgca_calib_age.ind = round((mgca_ts.min - d_mgca_calib$Age) / mgca_ts.step) + 1
##Read in d18O calibration dataset
d_d18O_calib = read.csv("U_comp.csv")
d_d18O_calib = d_d18O_calib[is.na(d_d18O_calib$Ignore),]
##Parameters to be saved
parameters = c("d18O_sw", "BWT", "BWT.eps.ac", "BWT.var", "d18O_sw.eps.ac", "d18O_sw.var",
"lc", "MgCa_calib.var", "a", "d18O_calib.var", "d18O_calib.sd.off",
"MgCa_sw_m", "MgCa_sw_m.pre", "MgCa_sw_m.eps.ac")
##Data to pass to BUGS model
dat = list(nages = ts.len, nmgca.ages = mgca_ts.len,
MgCa_calib.bwt.m = d_mgca_calib$BWT, MgCa_calib.bwt.sd = d_mgca_calib$BWT_sd, MgCa_calib = d_mgca_calib$MgCa,
d18O_calib.bwt.m = d_d18O_calib$Temperature_C, d18O_calib.bwt.sd = rep(0.2,nrow(d_d18O_calib)), d18O_calib = d_d18O_calib$U.SW_d18O,
MgCa_sw.age.ind = mgca_sw_age.ind, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma,
MgCa.age.ind = mgca_age.ind.all, MgCa = d_mgca$MgCa,
d18O.age.ind = o_age.ind, d18O = d_o$d18O)
##Run the inversion
t1 = proc.time()
post2 = jags.parallel(model.file = "split_temporal.R", parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 10000, n.thin = 25)
proc.time() - t1
sims = nrow(post2$BUGSoutput$sims.list$BWT)
BWT.start = match("BWT[1]", row.names(post2$BUGSoutput$summary))
d18O.start = match("d18O_sw[1]", row.names(post2$BUGSoutput$summary))
MgCa.start = match("MgCa_sw_m[1]", row.names(post2$BUGSoutput$summary))
plot(-10, 0, xlab="Age", ylab ="Temperature", xlim=c(0,18), ylim=c(-3,11))
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(-3, nrow(d_mgca)), pch=21, bg = "white")
plot(-10, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(0,18), ylim=c(1.25,-2))
lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 7], col="red", lty=3)
points(d_o$Age.Ma, rep(1.25, nrow(d_o)), pch=21, bg = "white")
dev.off()
plot(-10, 0, xlab="Age", ylab ="Temperature", xlim=c(0,18), ylim=c(-3,11))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(-3, nrow(d_mgca)), pch=21, bg = "white")
plot(-10, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(0,18), ylim=c(1.25,-2))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 7], col="red", lty=3)
points(d_o$Age.Ma, rep(1.25, nrow(d_o)), pch=21, bg = "white")
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, post2$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 5], col="red")
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 3], col="red", lty=3)
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 7], col="red", lty=3)
points(d_mgca_sw$Age, d_mgca_sw$MgCa, pch=21, bg = "white")
points(d_o$Age.Ma, rep(1, nrow(d_o)), pch=21, bg = "black")
traceplot(post2$BUGSoutput, varname = "MgCa_sw_m.pre")
View(post2$BUGSoutput$summary)
traceplot(post2$BUGSoutput, varname = "MgCa_sw_m")
dev.off
dev.off()
citation()
citation("rjags")
update.packages()
y
install.packages(c("coda", "doParallel", "iterators", "MASS", "MCMCpack", "rjags", "rJava", "stringi", "xlsx"))
install.packages(c("coda", "doParallel", "iterators", "MASS", "MCMCpack", "rjags", "rJava", "stringi", "xlsx"))
install.packages(c("coda", "doParallel", "iterators", "MASS", "MCMCpack", "rjags", "rJava", "stringi", "xlsx"))
citation("jags")
citation("rjags")
