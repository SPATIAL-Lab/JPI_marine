#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.5, 0.99)
MgCa_sw_m.var ~ dgamma(MgCa_sw_m.var.k, 1 / MgCa_sw_m.var.theta)
MgCa_sw_m.var.k = MgCa_sw_m.var.m / MgCa_sw_m.var.theta
MgCa_sw_m.var.theta = MgCa_sw_m.var.var / MgCa_sw_m.var.m
MgCa_sw_m.var.m = 0.0005
MgCa_sw_m.var.var = 0.0005 ^ 2
}"
pp = jags(model.file = textConnection(tmod), parameters.to.save = parms,
data = dat_sw, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
plot(d_mgca_sw$Age, d_mgca_sw$MgCa, ylim=c(0,6))
for(i in 1:nrow(pp$BUGSoutput$sims.list$MgCa_sw_m)){
lines(mgca_ts.ages, pp$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 5], col="red")
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 3], col="red", lty=3)
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 7], col="red", lty=3)
points(d_mgca_sw$Age, d_mgca_sw$MgCa, pch=21, bg="white")
View(pp$BUGSoutput$summary)
tmod = "model {
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, 1 / MgCa_sw_m.var)
}
MgCa_sw_m.eps[1] ~ dnorm(0, 1 / MgCa_sw_m.var)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.8, 0.99)
MgCa_sw_m.var ~ dgamma(MgCa_sw_m.var.k, 1 / MgCa_sw_m.var.theta)
MgCa_sw_m.var.k = MgCa_sw_m.var.m / MgCa_sw_m.var.theta
MgCa_sw_m.var.theta = MgCa_sw_m.var.var / MgCa_sw_m.var.m
MgCa_sw_m.var.m = 0.0005
MgCa_sw_m.var.var = 0.0005 ^ 2
}"
pp = jags(model.file = textConnection(tmod), parameters.to.save = parms,
data = dat_sw, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
View(pp$BUGSoutput$summary)
plot(d_mgca_sw$Age, d_mgca_sw$MgCa, ylim=c(0,6))
for(i in 1:nrow(pp$BUGSoutput$sims.list$MgCa_sw_m)){
lines(mgca_ts.ages, pp$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 5], col="red")
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 3], col="red", lty=3)
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 7], col="red", lty=3)
points(d_mgca_sw$Age, d_mgca_sw$MgCa, pch=21, bg="white")
tmod = "model {
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, 1 / MgCa_sw_m.var)
}
MgCa_sw_m.eps[1] ~ dnorm(0, 1 / MgCa_sw_m.var)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.9, 0.99)
MgCa_sw_m.var ~ dgamma(MgCa_sw_m.var.k, 1 / MgCa_sw_m.var.theta)
MgCa_sw_m.var.k = MgCa_sw_m.var.m / MgCa_sw_m.var.theta
MgCa_sw_m.var.theta = MgCa_sw_m.var.var / MgCa_sw_m.var.m
MgCa_sw_m.var.m = 0.0005
MgCa_sw_m.var.var = 0.0005 ^ 2
}"
tmod = "model {
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, 1 / MgCa_sw_m.var)
}
MgCa_sw_m.eps[1] ~ dnorm(0, 1 / MgCa_sw_m.var)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.95, 0.99)
MgCa_sw_m.var ~ dgamma(MgCa_sw_m.var.k, 1 / MgCa_sw_m.var.theta)
MgCa_sw_m.var.k = MgCa_sw_m.var.m / MgCa_sw_m.var.theta
MgCa_sw_m.var.theta = MgCa_sw_m.var.var / MgCa_sw_m.var.m
MgCa_sw_m.var.m = 0.0005
MgCa_sw_m.var.var = 0.0005 ^ 2
}"
tmod = "model {
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, 1 / MgCa_sw_m.var)
}
MgCa_sw_m.eps[1] ~ dnorm(0, 1 / MgCa_sw_m.var)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.95, 1)
MgCa_sw_m.var ~ dgamma(MgCa_sw_m.var.k, 1 / MgCa_sw_m.var.theta)
MgCa_sw_m.var.k = MgCa_sw_m.var.m / MgCa_sw_m.var.theta
MgCa_sw_m.var.theta = MgCa_sw_m.var.var / MgCa_sw_m.var.m
MgCa_sw_m.var.m = 0.0005
MgCa_sw_m.var.var = 0.0005 ^ 2
}"
pp = jags(model.file = textConnection(tmod), parameters.to.save = parms,
data = dat_sw, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
View(pp$BUGSoutput$summary)
plot(d_mgca_sw$Age, d_mgca_sw$MgCa, ylim=c(0,6))
for(i in 1:nrow(pp$BUGSoutput$sims.list$MgCa_sw_m)){
lines(mgca_ts.ages, pp$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 5], col="red")
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 3], col="red", lty=3)
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 7], col="red", lty=3)
points(d_mgca_sw$Age, d_mgca_sw$MgCa, pch=21, bg="white")
tmod = "model {
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, 1 / MgCa_sw_m.var)
}
MgCa_sw_m.eps[1] ~ dnorm(0, 1 / MgCa_sw_m.var)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.95, 1)
MgCa_sw_m.var ~ dgamma(MgCa_sw_m.var.k, 1 / MgCa_sw_m.var.theta)
MgCa_sw_m.var.k = MgCa_sw_m.var.m / MgCa_sw_m.var.theta
MgCa_sw_m.var.theta = MgCa_sw_m.var.var / MgCa_sw_m.var.m
MgCa_sw_m.var.m = 0.0001
MgCa_sw_m.var.var = 0.0001 ^ 2
}"
pp = jags(model.file = textConnection(tmod), parameters.to.save = parms,
data = dat_sw, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
plot(d_mgca_sw$Age, d_mgca_sw$MgCa, ylim=c(0,6))
for(i in 1:nrow(pp$BUGSoutput$sims.list$MgCa_sw_m)){
lines(mgca_ts.ages, pp$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 5], col="red")
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 3], col="red", lty=3)
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 7], col="red", lty=3)
points(d_mgca_sw$Age, d_mgca_sw$MgCa, pch=21, bg="white")
View(pp$BUGSoutput$summary)
##Read in paleo-seawater MgCa data
d_mgca_sw = read.csv("mgca_sw.txt")
dat_sw = list(nmgca.ages = mgca_ts.len, MgCa_sw.age.ind = MgCa_sw.age.ind, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma)
pp = jags(model.file = textConnection(tmod), parameters.to.save = parms,
data = dat_sw, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
##Read in paleo-seawater MgCa data
d_mgca_sw = read.csv("mgca_sw.txt")
##Set up timeseries for MgCa_sw modeling
mgca_ts.min = 110
mgca_ts.max = 0
mgca_ts.step = 1
mgca_ts.ages = seq(mgca_ts.min, mgca_ts.max, -mgca_ts.step)
mgca_ts.len = length(mgca_ts.ages)
parms = c("MgCa_sw_m", "MgCa_sw_m.var", "MgCa_sw_m.eps.ac")
##Data to pass to BUGS model
MgCa_sw.age.ind = round((mgca_ts.min - d_mgca_sw$Age) / mgca_ts.step) + 1
dat_sw = list(nmgca.ages = mgca_ts.len, MgCa_sw.age.ind = MgCa_sw.age.ind, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma)
pp = jags(model.file = textConnection(tmod), parameters.to.save = parms,
data = dat_sw, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
plot(d_mgca_sw$Age, d_mgca_sw$MgCa, ylim=c(0,6))
for(i in 1:nrow(pp$BUGSoutput$sims.list$MgCa_sw_m)){
lines(mgca_ts.ages, pp$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 5], col="red")
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 3], col="red", lty=3)
lines(mgca_ts.ages, pp$BUGSoutput$summary[1:mgca_ts.len, 7], col="red", lty=3)
points(d_mgca_sw$Age, d_mgca_sw$MgCa, pch=21, bg="white")
View(pp$BUGSoutput$summary)
split_AR = "model {
#Data model for MgCa observations
for(i in 1:length(MgCa)){
MgCa[i] ~ dnorm(MgCa.m[i], 1 / MgCa.var[i])
MgCa.var[i] = (MgCa.m[i] * 0.01) ^ 2
MgCa.m[i] = lc[1] + lc[2] * BWT[MgCa.age.ind[i]] * MgCa.sw[i] ^ lc[3]
#MgCa.m[i] = ec[1] * MgCa.sw[i] ^ ec[2] * exp(ec[3] * BWT[MgCa.age.ind[i]])
MgCa.sw[i] ~ dnorm(MgCa.sw.m[i], 1 / 0.03 ^ 2)
MgCa.sw.m[i] = MgCa_sw.b[1] + MgCa_sw.b[2] * MgCa.age[i] + MgCa_sw.b[3] * MgCa.age[i] ^ 2 + MgCa_sw.b[4] * MgCa.age[i] ^ 3
MgCa.age[i] = age.old - age.int * (MgCa.age.ind[i] - 1)
}
#Data model for MgCa_calib observations
for(i in 1:length(MgCa_calib)){
MgCa_calib[i] ~ dnorm(MgCa_calib.m[i], 1 / (MgCa_calib.m[i] * 0.01) ^ 2)
MgCa_calib.m[i] = lc[1] + lc[2] * MgCa_calib.bwt[i] * MgCa_calib.sw[i] ^ lc[3]
#MgCa_calib.m[i] = ec[1] * MgCa_calib.sw[i] ^ ec[2] * exp(ec[3] * MgCa_calib.bwt[i])
MgCa_calib.sw[i] ~ dnorm(MgCa_calib.sw.m[i], 1 / 0.03 ^ 2)
MgCa_calib.sw.m[i] = MgCa_sw.b[1] + MgCa_sw.b[2] * MgCa_calib.age[i] + MgCa_sw.b[3] * MgCa_calib.age[i] ^ 2 + MgCa_sw.b[4] * MgCa_calib.age[i] ^ 3
}
#Priors on MgCa_calib data model parameters
#ec[1] ~ dnorm(ec.1.m, 1 / ec.1.var)
#ec[2] ~ dnorm(ec.2.m, 1 / ec.2.var)
#ec[3] ~ dnorm(ec.3.m, 1 / ec.3.var)
lc[1] ~ dnorm(lc.1.m, 1 / lc.1.var)
lc[2] ~ dnorm(lc.2.m, 1 / lc.2.var)
lc[3] ~ dnorm(lc.3.m, 1 / lc.3.var)
ec.1.m = 0.7
ec.1.var = 0.04 ^ 2
ec.2.m = 0.4
ec.2.var = 0.03 ^ 2
ec.3.m = 0.1
ec.3.var = 0.01 ^ 2
lc.1.m = 1.4
lc.1.var = 0.02 ^ 2
lc.2.m = 0.11
lc.2.var = 0.002 ^ 2
lc.3.m = -0.019
lc.3.var = 0.01 ^ 2
#Data model for d18O observations
for(i in 1:length(d18O)){
d18O[i] ~ dnorm(d18O.m[i], 1 / d18O.var)
d18O.m[i] = d18O_sw[d18O.age.ind[i]] + a.1 + a.2 * BWT[d18O.age.ind[i]] + a.3 * BWT[d18O.age.ind[i]] ^ 2
}
# Priors on d18O data model parameters
a.1 ~ dnorm(a.1.m, 1 / a.1.var)
a.2 ~ dnorm(a.2.m, 1 / a.2.var)
a.3 ~ dnorm(a.3.m, 1 / a.3.var)
a.1.m = 3.31
a.1.var = 0.02 ^ 2
a.2.m = -0.245
a.2.var = 0.005 ^ 2
a.3.m = 0.0011
a.3.var = 0.0002 ^ 2
d18O.var = 0.1 ^ 2
#System model for BWT and d18O timeseries
for(i in 2:nages){
d18O_sw[i] = d18O_sw[i-1] + d18O_sw.eps[i]
BWT[i] = BWT[i-1] + BWT.eps[i]
d18O_sw.eps[i] ~ dnorm(d18O_sw.eps[i - 1] * d18O_sw.eps.ac, 1 / d18O_sw.var)
BWT.eps[i] ~ dnorm(BWT.eps[i - 1] * BWT.eps.ac, 1 / BWT.var)
}
#Priors on BWT and d18O timeseries model parameters
d18O_sw.eps[1] ~ dnorm(0, 1 / d18O_sw.var)
BWT.eps[1] ~ dnorm(0, 1 / BWT.var)
d18O_sw[1] = d18O_sw.init
BWT[1] = BWT.init
d18O_sw.init ~ dunif(d18O_sw.init.min, d18O_sw.init.max)
d18O_sw.init.min = -0.5
d18O_sw.init.max = 1
BWT.init ~ dunif(BWT.init.min, BWT.init.max)
BWT.init.min = 5
BWT.init.max = 9
d18O_sw.eps.ac ~ dunif(0, 0.4)
BWT.eps.ac ~ dunif(0, 0.4)
d18O_sw.var ~ dgamma(d18O_sw.var.k, 1 / d18O_sw.var.theta)
d18O_sw.var.k = d18O_sw.var.m / d18O_sw.var.theta
d18O_sw.var.theta = d18O_sw.var.var / d18O_sw.var.m
d18O_sw.var.m = 0.05
d18O_sw.var.var = 0.1 ^ 2
BWT.var ~ dgamma(BWT.var.k, 1 / BWT.var.theta)
BWT.var.k = BWT.var.m / BWT.var.theta
BWT.var.theta = BWT.var.var / BWT.var.m
BWT.var.m = 0.35
BWT.var.var = 0.2 ^ 2
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, 1 / MgCa_sw_m.var)
}
MgCa_sw_m.eps[1] ~ dnorm(0, 1 / MgCa_sw_m.var)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.95, 1)
MgCa_sw_m.var ~ dgamma(MgCa_sw_m.var.k, 1 / MgCa_sw_m.var.theta)
MgCa_sw_m.var.k = MgCa_sw_m.var.m / MgCa_sw_m.var.theta
MgCa_sw_m.var.theta = MgCa_sw_m.var.var / MgCa_sw_m.var.m
MgCa_sw_m.var.m = 0.0001
MgCa_sw_m.var.var = 0.0001 ^ 2
}
"
##Read in paleo-seawater MgCa data
d_mgca_sw = read.csv("mgca_sw.txt")
##Set up timeseries for MgCa_sw modeling
mgca_ts.min = 110
mgca_ts.max = 0
mgca_ts.step = 1
mgca_ts.ages = seq(mgca_ts.min, mgca_ts.max, -mgca_ts.step)
mgca_ts.len = length(mgca_ts.ages)
##Age index for seawater MgCa samples
MgCa_sw.age.ind = round((mgca_ts.min - d_mgca_sw$Age) / mgca_ts.step) + 1
##Parameters to be saved
parameters = c("d18O_sw", "BWT", "BWT.eps.ac", "BWT.var", "lc",
"d18O_sw.eps.ac", "d18O_sw.var",
"MgCa_sw_m", "MgCa_sw_m.var", "MgCa_sw_m.eps.ac")
##Data to pass to BUGS model
dat = list(nages = ts.len, age.old = ts.min, age.int = ts.step,
MgCa_calib.age = d_mgca_calib$Age, MgCa_calib.bwt = d_mgca_calib$BWT, MgCa_calib = d_mgca_calib$MgCa,
nmgca.ages = mgca_ts.len, MgCa_sw.age.ind = MgCa_sw.age.ind, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma,
MgCa.age.ind = mgca_age.ind, MgCa = d_mgca$MgCa,
d18O.age.ind = o_age.ind, d18O = d_o$d18O)
t1 = proc.time()
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
proc.time() - t1
mgca_age.ind
mgca_ts.min = 110
mgca_ts.max = 0
mgca_ts.step = 1
mgca_ts.ages = seq(mgca_ts.min, mgca_ts.max, -mgca_ts.step)
mgca_ts.len = length(mgca_ts.ages)
##Age index for seawater MgCa samples
MgCa_sw.age.ind = round((mgca_ts.min - d_mgca_sw$Age) / mgca_ts.step) + 1
##Add age seawater MgCa TS indicies for MgCa foram data
mgca_age.ind.sw = round((mgca_ts.min - d_mgca$Age.Ma) / mgca_ts.step) + 1
mgca_age.ind.all = matrix(c(mgca_age.ind, mgca_age.ind.sw), ncol = 2)
mgca_age.ind.all
##Age index for MgCa calibration samples
mgca_calib_age.ind = round((mgca_ts.min - d_mgca_calib$Age) / mgca_ts.step) + 1
split_AR = "model {
#Data model for MgCa observations
for(i in 1:length(MgCa)){
MgCa[i] ~ dnorm(MgCa.m[i], 1 / MgCa.var[i])
MgCa.var[i] = (MgCa.m[i] * 0.01) ^ 2
MgCa.m[i] = lc[1] + lc[2] * BWT[MgCa.age.ind[i,1]] * MgCa.sw[i] ^ lc[3]
#MgCa.m[i] = ec[1] * MgCa.sw[i] ^ ec[2] * exp(ec[3] * BWT[MgCa.age.ind[i,1]])
MgCa.sw[i] ~ dnorm(MgCa_sw_m[MgCa.age.ind[i,2]], 1 / 0.03 ^ 2)
}
#Data model for MgCa_calib observations
for(i in 1:length(MgCa_calib)){
MgCa_calib[i] ~ dnorm(MgCa_calib.m[i], 1 / (MgCa_calib.m[i] * 0.01) ^ 2)
MgCa_calib.m[i] = lc[1] + lc[2] * MgCa_calib.bwt[i] * MgCa_calib.sw[i] ^ lc[3]
#MgCa_calib.m[i] = ec[1] * MgCa_calib.sw[i] ^ ec[2] * exp(ec[3] * MgCa_calib.bwt[i])
MgCa_calib.sw[i] ~ dnorm(MgCa_sw_m[MgCa.age.ind[i,2]], 1 / 0.03 ^ 2)
}
#Priors on MgCa_calib data model parameters
#ec[1] ~ dnorm(ec.1.m, 1 / ec.1.var)
#ec[2] ~ dnorm(ec.2.m, 1 / ec.2.var)
#ec[3] ~ dnorm(ec.3.m, 1 / ec.3.var)
lc[1] ~ dnorm(lc.1.m, 1 / lc.1.var)
lc[2] ~ dnorm(lc.2.m, 1 / lc.2.var)
lc[3] ~ dnorm(lc.3.m, 1 / lc.3.var)
ec.1.m = 0.7
ec.1.var = 0.04 ^ 2
ec.2.m = 0.4
ec.2.var = 0.03 ^ 2
ec.3.m = 0.1
ec.3.var = 0.01 ^ 2
lc.1.m = 1.4
lc.1.var = 0.02 ^ 2
lc.2.m = 0.11
lc.2.var = 0.002 ^ 2
lc.3.m = -0.019
lc.3.var = 0.01 ^ 2
#Data model for d18O observations
for(i in 1:length(d18O)){
d18O[i] ~ dnorm(d18O.m[i], 1 / d18O.var)
d18O.m[i] = d18O_sw[d18O.age.ind[i]] + a.1 + a.2 * BWT[d18O.age.ind[i]] + a.3 * BWT[d18O.age.ind[i]] ^ 2
}
# Priors on d18O data model parameters
a.1 ~ dnorm(a.1.m, 1 / a.1.var)
a.2 ~ dnorm(a.2.m, 1 / a.2.var)
a.3 ~ dnorm(a.3.m, 1 / a.3.var)
a.1.m = 3.31
a.1.var = 0.02 ^ 2
a.2.m = -0.245
a.2.var = 0.005 ^ 2
a.3.m = 0.0011
a.3.var = 0.0002 ^ 2
d18O.var = 0.1 ^ 2
#System model for BWT and d18O timeseries
for(i in 2:nages){
d18O_sw[i] = d18O_sw[i-1] + d18O_sw.eps[i]
BWT[i] = BWT[i-1] + BWT.eps[i]
d18O_sw.eps[i] ~ dnorm(d18O_sw.eps[i - 1] * d18O_sw.eps.ac, 1 / d18O_sw.var)
BWT.eps[i] ~ dnorm(BWT.eps[i - 1] * BWT.eps.ac, 1 / BWT.var)
}
#Priors on BWT and d18O timeseries model parameters
d18O_sw.eps[1] ~ dnorm(0, 1 / d18O_sw.var)
BWT.eps[1] ~ dnorm(0, 1 / BWT.var)
d18O_sw[1] = d18O_sw.init
BWT[1] = BWT.init
d18O_sw.init ~ dunif(d18O_sw.init.min, d18O_sw.init.max)
d18O_sw.init.min = -0.5
d18O_sw.init.max = 1
BWT.init ~ dunif(BWT.init.min, BWT.init.max)
BWT.init.min = 5
BWT.init.max = 9
d18O_sw.eps.ac ~ dunif(0, 0.4)
BWT.eps.ac ~ dunif(0, 0.4)
d18O_sw.var ~ dgamma(d18O_sw.var.k, 1 / d18O_sw.var.theta)
d18O_sw.var.k = d18O_sw.var.m / d18O_sw.var.theta
d18O_sw.var.theta = d18O_sw.var.var / d18O_sw.var.m
d18O_sw.var.m = 0.05
d18O_sw.var.var = 0.1 ^ 2
BWT.var ~ dgamma(BWT.var.k, 1 / BWT.var.theta)
BWT.var.k = BWT.var.m / BWT.var.theta
BWT.var.theta = BWT.var.var / BWT.var.m
BWT.var.m = 0.35
BWT.var.var = 0.2 ^ 2
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, 1 / MgCa_sw_m.var)
}
MgCa_sw_m.eps[1] ~ dnorm(0, 1 / MgCa_sw_m.var)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.95, 1)
MgCa_sw_m.var ~ dgamma(MgCa_sw_m.var.k, 1 / MgCa_sw_m.var.theta)
MgCa_sw_m.var.k = MgCa_sw_m.var.m / MgCa_sw_m.var.theta
MgCa_sw_m.var.theta = MgCa_sw_m.var.var / MgCa_sw_m.var.m
MgCa_sw_m.var.m = 0.0001
MgCa_sw_m.var.var = 0.0001 ^ 2
}
"
##Data to pass to BUGS model
dat = list(nages = ts.len, nmgca.ages = mgca_ts.len,
MgCa_calib.bwt = d_mgca_calib$BWT, MgCa_calib = d_mgca_calib$MgCa,
MgCa_sw.age.ind = MgCa_sw.age.ind, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma,
MgCa.age.ind = mgca_age.ind, MgCa = d_mgca$MgCa,
d18O.age.ind = o_age.ind, d18O = d_o$d18O)
MgCa.age.ind
mgca_age.ind
##Data to pass to BUGS model
dat = list(nages = ts.len, nmgca.ages = mgca_ts.len,
MgCa_calib.bwt = d_mgca_calib$BWT, MgCa_calib = d_mgca_calib$MgCa,
MgCa_sw.age.ind = MgCa_sw.age.ind, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma,
MgCa.age.ind = mgca_age.ind.all, MgCa = d_mgca$MgCa,
d18O.age.ind = o_age.ind, d18O = d_o$d18O)
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[1:ts.len, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:ts.len, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:ts.len, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
for(i in 1:nrow(post2$BUGSoutput$sims.list$d18O_sw)){
lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[(ts.len+7):(ts.len*2+6), 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[(ts.len+7):(ts.len*2+6), 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[(ts.len+7):(ts.len*2+6), 7], col="red", lty=3)
points(d_o$Age.Ma, rep(-1, nrow(d_o)), pch=21, bg = "white")
plot(0, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0,6))
for(i in 1:nrow(post2$BUGSoutput$sims.list$MgCa_sw_m)){
lines(ts.ages, post2$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
for(i in 1:nrow(post2$BUGSoutput$sims.list$MgCa_sw_m)){
lines(mgca_ts.ages, post2$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
View(post2$BUGSoutput$summary)
lines(ts.ages, post2$BUGSoutput$summary[(ts.len+3):(ts.len+3+mgca_ts.len), 5], col="red")
lines(mgca_ts.ages, post2$BUGSoutput$summary[(ts.len+3):(ts.len+3+mgca_ts.len), 5], col="red")
length(mgca_ts.ages)
mgca_ts.len-ts.len
mgca_ts.len
lines(mgca_ts.ages, post2$BUGSoutput$summary[(ts.len+3):(ts.len+3+mgca_ts.len), 5], col="red")
(ts.len+3+mgca_ts.len)
(ts.len+3)
185-74
(ts.len+3):(ts.len+3+mgca_ts.len)
mgca_ts.ages
post2$BUGSoutput$summary[(ts.len+3):(ts.len+3+mgca_ts.len), 5]
lines(mgca_ts.ages, post2$BUGSoutput$summary[(ts.len+3):(ts.len+2+mgca_ts.len), 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[(ts.len+3):(ts.len*2+6), 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[(ts.len+3):(ts.len*2+6), 7], col="red", lty=3)
points(d_o$Age.Ma, rep(-1, nrow(d_o)), pch=21, bg = "white")
lines(ts.ages, post2$BUGSoutput$summary[(ts.len+3):(ts.len+2+mgca_ts.len), 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[(ts.len+3):(ts.len+2+mgca_ts.len), 7], col="red", lty=3)
lines(mgca_ts.ages, post2$BUGSoutput$summary[(ts.len+3):(ts.len+2+mgca_ts.len), 3], col="red", lty=3)
lines(mgca_ts.ages, post2$BUGSoutput$summary[(ts.len+3):(ts.len+2+mgca_ts.len), 7], col="red", lty=3)
points(d_o$Age.Ma, rep(-1, nrow(d_o)), pch=21, bg = "white")
lines(ts.ages, post2$BUGSoutput$summary[(ts.len+mgca_ts.len+6):(mgca_ts.len+ts.len*2+5), 5], col="red")
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
for(i in 1:nrow(post2$BUGSoutput$sims.list$d18O_sw)){
lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1.5,1))
for(i in 1:nrow(post2$BUGSoutput$sims.list$d18O_sw)){
lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[(ts.len+mgca_ts.len+6):(mgca_ts.len+ts.len*2+5), 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[(ts.len+7):(ts.len*2+6), 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[(ts.len+7):(ts.len*2+6), 7], col="red", lty=3)
points(d_o$Age.Ma, rep(-1, nrow(d_o)), pch=21, bg = "white")
post2$BUGSoutput$summary[(ts.len+mgca_ts.len+6):(mgca_ts.len+ts.len*2+5), 5]
lines(ts.ages, post2$BUGSoutput$summary[(ts.len+mgca_ts.len+5):(mgca_ts.len+ts.len*2+4), 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[(ts.len+mgca_ts.len+5):(mgca_ts.len+ts.len*2+4), 7], col="red", lty=3)
