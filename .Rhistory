max(eu)
for(i in 2:2000){
eu[i] = rgamma(1, 0.1, 10)
es[i] = rbinom(1, 1, 0.5)
e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
tmp[i] = tmp[i-1] + 0.0 * e[i-1] + e[i]
}
plot(tmp)
mean(eu)
max(eu)
for(i in 2:2000){
eu[i] = rgamma(1, 0.1, 10)
es[i] = rbinom(1, 1, 0.5)
e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
tmp[i] = tmp[i-1] + 0.0 * e[i-1] + e[i]
}
plot(tmp)
mean(eu)
max(eu)
for(i in 2:2000){
eu[i] = rgamma(1, 0.1, 10)
es[i] = rbinom(1, 1, 0.5)
e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
eu[i] = rgamma(1, 0.1, 10)
es[i] = rbinom(1, 1, 0.5)
e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
eu[i] = rgamma(1, 0.1, 10)
es[i] = rbinom(1, 1, 0.5)
e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
eu[i] = rgamma(1, 0.1, 10)
es[i] = rbinom(1, 1, 0.5)
e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
eu[i] = rgamma(1, 0.1, 10)
es[i] = rbinom(1, 1, 0.5)
e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
eu[i] = rgamma(1, 0.1, 10)
es[i] = rbinom(1, 1, 0.5)
e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
eu[i] = rgamma(1, 0.1, 10)
es[i] = rbinom(1, 1, 0.5)
e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0, 0.08)
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
mean(eu)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0, 0.04)
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0, 0.04)
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0, 0.04)
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0, 0.04)
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0, 0.04)
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0, 0.04)
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0, 0.04)
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0, 0.04)
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0, 0.04)
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0, 0.04)
tmp[i] = tmp[i-1] + 0.5 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0, 0.04)
tmp[i] = tmp[i-1] + 0.0 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0, 0.04)
tmp[i] = tmp[i-1] + 0.0 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0, 0.04)
tmp[i] = tmp[i-1] + 0.0 * e[i-1] + e[i]
}
plot(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.0 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.0 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.0 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.0 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.0 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
tmp = double()
tmp[1] = 5
e[1] = 0.1
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.5 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.5 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.5 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.5 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.5 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.5 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.5 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.5 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.5 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 1 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 1 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 1 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 1 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.8 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.8 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
for(i in 2:2000){
#  eu[i] = rgamma(1, 0.1, 10)
#  es[i] = rbinom(1, 1, 0.5)
#  e[i] = ifelse(es[i] == 1, eu[i], -eu[i])
e[i] = rnorm(1, 0.8 * e[i-1], 0.04)
tmp[i] = tmp[i-1] + e[i]
}
plot(tmp)
max(tmp) - min(tmp)
5.2 - 0.238 * Age[i] + 0.00661 * Age[i] ^ 2 - 6.66e-5 * Age[i] ^ 3
5.2 - 0.238 * 15 + 0.00661 * 15 ^ 2 - 6.66e-5 * 15 ^ 3
split_AR = "model {
for(i in 1:length(MgCa)){
MgCa[i] ~ dnorm(MgCa.m[i], 1 / MgCa.var[i])
MgCa.var[i] = (MgCa.m[i] * 0.01) ^ 2
MgCa.m[i] = MgCa.m.e[i]
MgCa.m.e[i] = e.1[i] * MgCa_sw[i] ^ e.2[i] * exp(e.3[i] * BWT[MgCa.age.ind[i]])
e.1[i] ~ dnorm(e.1.m, 1 / e.1.var)
e.2[i] ~ dnorm(e.2.m, 1 / e.2.var)
e.3[i] ~ dnorm(e.3.m, 1 / e.3.var)
MgCa_sw[i] ~ dunif(MgCa_sw.m[i] - MgCa_sw.r, MgCa_sw.m[i] + MgCa_sw.r)
MgCa_sw.m[i] = 5.2 - 0.238 * Age[i] + 0.00661 * Age[i] ^ 2 - 6.66e-5 * Age[i] ^ 3
}
MgCa_sw.r = 0.005
e.1.m = 0.66
e.1.var = 0.04 ^ 2
e.2.m = 0.27
e.2.var = 0.03 ^ 2
e.3.m = 0.114
e.3.var = 0.01 ^ 2
for(i in 1:length(d18O)){
d18O[i] ~ dnorm(d18O.m[i], 1 / d18O.var)
d18O.m[i] = d18O_sw[d18O.age.ind[i]] + a.1[i] + a.2[i] * BWT[d18O.age.ind[i]] + a.3[i] * BWT[d18O.age.ind[i]] ^ 2
a.1[i] ~ dnorm(a.1.m, 1 / a.1.var)
a.2[i] ~ dnorm(a.2.m, 1 / a.2.var)
a.3[i] ~ dnorm(a.3.m, 1 / a.3.var)
}
a.1.m = 3.31
a.1.var = 0.02 ^ 2
a.2.m = -0.245
a.2.var = 0.005 ^ 2
a.3.m = 0.0011
a.3.var = 0.0002 ^ 2
d18O.var = 0.1 ^ 2
for(i in 2:nages){
d18O_sw[i] = d18O_sw[i-1] + d18O_sw.eps[i]
BWT[i] = BWT[i-1] + BWT.eps[i]
d18O_sw.eps[i] ~ dnorm(d18O_sw.eps[i - 1] * d18O_sw.eps.ac, 1 / d18O_sw.var)
BWT.eps[i] ~ dnorm(BWT.eps[i - 1] * BWT.eps.ac, 1 / BWT.var)
}
d18O_sw.eps[1] ~ dnorm(0, 1 / d18O_sw.var)
BWT.eps[1] ~ dnorm(0, 1 / BWT.var)
d18O_sw[1] = d18O_sw.init
BWT[1] = BWT.init
d18O_sw.init ~ dunif(d18O_sw.init.min, d18O_sw.init.max)
d18O_sw.init.min = -2
d18O_sw.init.max = 5
BWT.init ~ dunif(BWT.init.min, BWT.init.max)
BWT.init.min = 0
BWT.init.max = 10
d18O_sw.eps.ac ~ dunif(0, 1)
BWT.eps.ac ~ dunif(0, 1)
d18O_sw.var ~ dgamma(d18O_sw.var.k, 1 / d18O_sw.var.theta)
d18O_sw.var.k = d18O_sw.var.m / d18O_sw.var.theta
d18O_sw.var.theta = d18O_sw.var.var / d18O_sw.var.m
d18O_sw.var.m = 0.05
d18O_sw.var.var = 0.01 ^ 2
BWT.var ~ dgamma(BWT.var.k, 1 / BWT.var.theta)
BWT.var.k = BWT.var.m / BWT.var.theta
BWT.var.theta = BWT.var.var / BWT.var.m
BWT.var.m = 0.1
BWT.var.var = 0.2 ^ 2
}
"
d = read.xlsx("Lear_2015_data.xlsx", sheetIndex = 1)
set.seed(19395)
ts.min = 18
ts.max = 11
ts.step = 0.05
ts.ages = seq(ts.min, ts.max, -ts.step)
ts.len = length(ts.ages)
d_o = d[!is.na(d$d18O),]
o_age.ind = round((ts.min - d_o$Age.Ma) / ts.step) + 1
d_mgca = d[!is.na(d$MgCa),]
mgca_age.ind = round((ts.min - d_mgca$Age.Ma) / ts.step) + 1
parameters = c("d18O_sw", "BWT", "d18O_sw.eps.ac", "BWT.eps.ac", "d18O_sw.var", "BWT.var")
dat = list(nages = ts.len, Age = d_mgca$Age.Ma, MgCa.age.ind = mgca_age.ind, MgCa = d_mgca$MgCa, d18O.age.ind = o_age.ind, d18O = d_o$d18O)
tq = proc.time()
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
proc.time() - t1
tq = proc.time()
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
proc.time - tq
proc.time() - tq
post2
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
#for(i in 1:nrow(post2$BUGSoutput$sims.list$BWT)){
#  lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
#}
lines(ts.ages, post2$BUGSoutput$summary[1:141, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:141, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:141, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
library(R2OpenBUGS)
library(coda)
library(rjags)
library(R2jags)
library(xlsx)
setwd("C:/Users/gjbowen/Dropbox/HypoMirror/JPI_marine/")
d = read.xlsx("Lear_2015_data.xlsx", sheetIndex = 1)
set.seed(19395)
ts.min = 18
ts.max = 11
ts.step = 0.05
ts.ages = seq(ts.min, ts.max, -ts.step)
ts.len = length(ts.ages)
d_o = d[!is.na(d$d18O),]
d_o
d_o = d_o[Sample.ID != "47-5",]
d_o = d_o[d_o$Sample.ID != "47-5",]
d_o
d_o = d_o[d_o$Sample.ID != "806B 47-5",]
d_o = d_o[d_o$Depth.m != 442.48,]
o_age.ind = round((ts.min - d_o$Age.Ma) / ts.step) + 1
d_mgca = d[!is.na(d$MgCa),]
mgca_age.ind = round((ts.min - d_mgca$Age.Ma) / ts.step) + 1
parameters = c("d18O_sw", "BWT", "d18O_sw.eps.ac", "BWT.eps.ac", "d18O_sw.var", "BWT.var")
dat = list(nages = ts.len, Age = d_mgca$Age.Ma, MgCa.age.ind = mgca_age.ind, MgCa = d_mgca$MgCa, d18O.age.ind = o_age.ind, d18O = d_o$d18O)
source("split_temporal.R")
t1 = proc.time()
post2 = jags(model.file = textConnection(split_AR), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=3, n.iter = 50000,
n.burnin = 1000, n.thin = 25)
proc.time() - t1
plot(0, 0, xlab="Age", ylab ="Temperature", xlim=c(11,18), ylim=c(4,11))
lines(ts.ages, post2$BUGSoutput$summary[1:141, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[1:141, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[1:141, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(4, nrow(d_mgca)), pch=21, bg = "white")
plot(0, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(11,18), ylim=c(-1,1.5))
lines(ts.ages, post2$BUGSoutput$summary[144:284, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[144:284, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[144:284, 7], col="red", lty=3)
points(d_o$Age.Ma, rep(-1, nrow(d_o)), pch=21, bg = "white")
