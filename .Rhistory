1/0.01
dada = rgamma(10000, 60, 1)
mean(dada)
sd(dada)
sd(1/dada)
dada = rgamma(10000, 60, 6)
mean(dada)
dada = rgamma(10000, 360, 6)
mean(dada)
sd(1/dada)
dada = rgamma(10000, 10, 1/6)
mean(dada)
sd(1/dada)
sd(dada)
plot(1/dada)
points(rgamma(10000, 0.13^2, 0.1^2, col="red"))
points(rgamma(10000, 0.13^2, 0.1^2), col="red")
dada = rgamma(10000, 1, 1/60)
mean(dada)
sd(dada)
plot(1/dada)
dada = rgamma(10000, 2, 1/30)
plot(1/dada)
points(rgamma(10000, 0.13^2, 0.1^2), col="red")
1/(0.11^2)
tt = 0.1^2 / 0.13^2
tk = 0.13^2 / tt
points(rgamma(10000, tk, tt), col="grey")
tt = 0.01 / 0.11^2
tk = 0.11^2 / tt
plot(rgamma(10000, tk, tt))
dada = rgamma(10000, 2, 1/40)
points(dada, col="red")
points(1/dada, col="red")
mean(dada)
mean(1/dada)
mean(rgamma(10000, tk, tt))
dada = rgamma(10000, 3, 1/40)
mean(1/dada)
points(dada, col="grey")
points(1/dada, col="grey")
dada = rgamma(10000, 2, 1/50)
mean(1/dada)
dada = rgamma(10000, 2, 1/60)
mean(1/dada)
dada = rgamma(10000, 2, 1/80)
mean(1/dada)
plot(rgamma(10000, tk, tt))
points(1/dada, col="red")
dada = rgamma(10000, 4, 1/40)
mean(1/dada)
dada = rgamma(10000, 4, 1/20)
mean(1/dada)
dada = rgamma(10000, 4, 1/30)
mean(1/dada)
points(1/dada, col="grey")
dada = rgamma(10000, 1, 1/160)
mean(1/dada)
dada = rgamma(10000, 1, 1/100)
mean(1/dada)
points(1/dada, col="red")
0.1^2 + 0.25^2
1/(0.1^2) + 1/(0.25^2)
1/116
1/0.1^2
1/100 + 1/1/(0.25^2)
1/16.01
0.25^2
1/(0.25^2)
1/80 + 1/16
sqrt(0.075)
0.11^2 + 0.25^2
1/0.0746
dada = rgamma(10000, 1, 1/50)
mean(1/dada)
sd(1/50)
sd(1/dada)
dada = rgamma(10000, 2, 1/50)
mean(1/dada)
sd(1/dada)
dada = rgamma(10000, 2, 1/25)
mean(1/dada)
dada = rgamma(10000, 2, 1/20)
mean(1/dada)
sd(1/dada)
plot(1/dada)
dada = rgamma(10000, 3, 1)
mean(1/dada)
sd(1/dada)
dada = rgamma(10000, 5, 2)
mean(1/dada)
sd(1/dada)
dada = rgamma(10000, 4, 2)
mean(1/dada)
dada = rgamma(10000, 7, 2)
mean(1/dada)
sd(1/dada)
plot(1/dada)
mgca_ts.min = 110
mgca_ts.max = 0
mgca_ts.step = 2
mgca_ts.ages = seq(mgca_ts.min, mgca_ts.max, -mgca_ts.step)
mgca_ts.len = length(mgca_ts.ages)
##Age index for seawater MgCa samples
mgca_sw_age.ind = round((mgca_ts.min - d_mgca_sw$Age) / mgca_ts.step) + 1
##Add age seawater MgCa TS indicies for MgCa foram data
mgca_age.ind.sw = round((mgca_ts.min - d_mgca$Age.Ma) / mgca_ts.step) + 1
mgca_age.ind.all = matrix(c(mgca_age.ind, mgca_age.ind.sw), ncol = 2)
##Read in MgCa calibration dataset
d_mgca_calib = read.csv("mgca_calib.csv")
##Age index for MgCa calibration samples
mgca_calib_age.ind = round((mgca_ts.min - d_mgca_calib$Age) / mgca_ts.step) + 1
##Read in d18O calibration dataset
d_d18O_calib = read.csv("C_comp.csv")
d_d18O_calib = d_d18O_calib[is.na(d_d18O_calib$Ignore),]
##Parameters to be saved
parameters = c("d18O_sw", "BWT", "BWT.eps.ac", "BWT.pre", "d18O_sw.eps.ac", "d18O_sw.pre",
"lc", "MgCa_calib.pre", "a", "d18O_calib.pre", "d18O_calib.sd.off",
"MgCa_sw_m", "MgCa_sw_m.pre", "MgCa_sw_m.eps.ac")
##Data to pass to BUGS model
dat = list(nages = ts.len, nmgca.ages = mgca_ts.len,
MgCa_calib.bwt.m = d_mgca_calib$BWT, MgCa_calib.bwt.sd = d_mgca_calib$BWT_sd, MgCa_calib = d_mgca_calib$MgCa,
d18O_calib.bwt.m = d_d18O_calib$Temperature_C, d18O_calib.bwt.sd = rep(0.2,nrow(d_d18O_calib)), d18O_calib = d_d18O_calib$C.SW_d18O,
MgCa_sw.age.ind = mgca_sw_age.ind, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma,
MgCa.age.ind = mgca_age.ind.all, MgCa = d_mgca$MgCa,
d18O.age.ind = o_age.ind, d18O = d_o$d18O)
t1 = proc.time()
post2 = jags.parallel(model.file = "split_temporal.R", parameters.to.save = parameters,
data = dat, n.chains=3, n.iter = 50000,
n.burnin = 10000, n.thin = 10)
proc.time() - t1
t1 = proc.time()
post2 = jags.parallel(model.file = "split_temporal.R", parameters.to.save = parameters,
data = dat, n.chains=3, n.iter = 50000,
n.burnin = 10000, n.thin = 10)
proc.time() - t1
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, post2$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 5], col="red")
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 3], col="red", lty=3)
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 7], col="red", lty=3)
points(d_mgca_sw$Age, d_mgca_sw$MgCa, pch=21, bg = "white")
points(d_o$Age.Ma, rep(1, nrow(d_o)), pch=21, bg = "black")
View(post2$BUGSoutput$summary)
MgCa_sw_m.pre.theta = 0.01
MgCa_sw_m.pre.k = 100000
dada = rgamma(10000, 100000, 0.01)
plot(dada)
mg_mod = " model {
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dunif(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac - 0.01, MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac + 0.01)
}
MgCa_sw_m.eps[1] ~ dunif(-0.01, 0.01)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.96, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.k, 1 / MgCa_sw_m.pre.theta)
MgCa_sw_m.pre.k = 100000
MgCa_sw_m.pre.theta = 0.01
}"
parameters = c("MgCa_sw_m", "MgCa_sw_m.pre", "MgCa_sw_m.eps.ac", "MgCa_sw_m.eps")
##Set up timeseries for MgCa_sw modeling
mgca_ts.min = 110
mgca_ts.max = 0
mgca_ts.step = 2
mgca_ts.ages = seq(mgca_ts.min, mgca_ts.max, -mgca_ts.step)
mgca_ts.len = length(mgca_ts.ages)
##Age index for seawater MgCa samples
mgca_sw_age.ind = round((mgca_ts.min - d_mgca_sw$Age) / mgca_ts.step) + 1
##Data to pass to BUGS model
dat = list(nmgca.ages = mgca_ts.len, MgCa_sw.age.ind = mgca_sw_age.ind, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma)
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 1000, n.thin = 2)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
plot(mg_post$BUGSoutput$sims.list$MgCa_sw_m.eps[,50])
traceplot(mg_post, varname = "MgCa_sw_m.eps")
traceplot(mg_post, varname = "MgCa_sw_m")
dev.off()
mg_mod = " model {
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
MgCa_sw_m.eps[i] ~ dunif(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac - 0.01, MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac + 0.01)
}
MgCa_sw_m.eps[1] ~ dunif(-0.01, 0.01)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.96, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.k, 1 / MgCa_sw_m.pre.theta)
MgCa_sw_m.pre.k = 100000
MgCa_sw_m.pre.theta = 0.02
}"
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 1000, n.thin = 2)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
points(d_mgca_sw$Age, d_mgca_sw$MgCa, pch=21, bg = "white")
mean(rgamma(10000, 7, 2))
sd(rgamma(10000, 7, 2))
1/mean(rgamma(10000, 7, 2))
mean(1/rgamma(10000, 7, 2))
mean(rgamma(10000, 8, 2))
sd(rgamma(10000, 8, 2))
mean(rgamma(10000, 10, 2))
mean(rgamma(10000, 30, 2))
mean(1/rgamma(10000, 30, 2))
mean(1/rgamma(10000, 20, 2))
sd(1/rgamma(10000, 20, 2))
mean(rgamma(10000, 2, 1/20))
plot(-10, 0, xlab="Age", ylab ="Temperature", xlim=c(0,18), ylim=c(-3,11))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(-3, nrow(d_mgca)), pch=21, bg = "white"
)
plot(-10, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(0,18), ylim=c(1.25,-2))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 7], col="red", lty=3)
points(d_o$Age.Ma, rep(1.25, nrow(d_o)), pch=21, bg = "white")
dada = rgamma(10000, shape = 20, rate = 2)
mean(dada)
sd(dada)
dada = rgamma(10000, shape = 2, rate = 1/20)
mean(dada)
sd(dada)
dada = rgamma(10000, shape = 10, rate = 1/5)
mean(dada)
sd(dada)
mean(1/dada)
sqrt(0.022)
dada = rgamma(10000, shape = 10, rate = 5)
mean(1/dada)
mean(dada)
sd(dada)
dada = rgamma(10000, shape = 2, rate = 20)
mean(dada)
sd(dada)
mg_mod = " model {
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
#MgCa_sw_m.eps[i] ~ dunif(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac - 0.01, MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac + 0.01)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, MgCa_sw_m.pre)
}
#MgCa_sw_m.eps[1] ~ dunif(-0.01, 0.01)
MgCa_sw_m.eps[1] ~ dnorm(0, MgCa_sw_m.pre)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.96, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.shp, MgCa_sw_m.pre.rate)
MgCa_sw_m.pre.shp = 100000
MgCa_sw_m.pre.rate = 0.02
}"
parameters = c("MgCa_sw_m", "MgCa_sw_m.pre", "MgCa_sw_m.eps.ac", "MgCa_sw_m.eps")
##Set up timeseries for MgCa_sw modeling
mgca_ts.min = 110
mgca_ts.max = 0
mgca_ts.step = 2
mgca_ts.ages = seq(mgca_ts.min, mgca_ts.max, -mgca_ts.step)
mgca_ts.len = length(mgca_ts.ages)
##Age index for seawater MgCa samples
mgca_sw_age.ind = round((mgca_ts.min - d_mgca_sw$Age) / mgca_ts.step) + 1
##Data to pass to BUGS model
dat = list(nmgca.ages = mgca_ts.len, MgCa_sw.age.ind = mgca_sw_age.ind, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma)
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 1000, n.thin = 2)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
plot(density(rgamma(10000, 100, 1)))
plot(density(rgamma(10000, 200, 2)))
plot(density(1/rgamma(10000, 200, 2)))
plot(density(1/rgamma(10000, 50, 0.5)))
plot(density(1/rgamma(10000, 25, 0.5)))
plot(density(1/rgamma(10000, 25, 1)))
sqrt(0.04)
plot(density(1/rgamma(10000, 10, 1)))
plot(density(1/rgamma(10000, 50, 1)))
sqrt(0.02)
plot(density(1/rgamma(10000, 5, 0.1)))
plot(density(1/rgamma(10000, 50, 0.1)))
sqrt(0.002)
plot(density(1/rgamma(10000, 100, 0.1)))
sqrt(0.001)
plot(density(1/rgamma(10000, 100, 0.01)))
sqrt(0.0001)
mg_mod = " model {
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
#MgCa_sw_m.eps[i] ~ dunif(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac - 0.01, MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac + 0.01)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, MgCa_sw_m.pre)
}
#MgCa_sw_m.eps[1] ~ dunif(-0.01, 0.01)
MgCa_sw_m.eps[1] ~ dnorm(0, MgCa_sw_m.pre)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.96, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.shp, MgCa_sw_m.pre.rate)
MgCa_sw_m.pre.shp = 100
MgCa_sw_m.pre.rate = 0.01
}"
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 1000, n.thin = 2)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
plot(density(1/rgamma(10000, 1000, 0.01)))
sqrt(1e-5)
mg_mod = " model {
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
#MgCa_sw_m.eps[i] ~ dunif(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac - 0.01, MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac + 0.01)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, MgCa_sw_m.pre)
}
#MgCa_sw_m.eps[1] ~ dunif(-0.01, 0.01)
MgCa_sw_m.eps[1] ~ dnorm(0, MgCa_sw_m.pre)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.96, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.shp, MgCa_sw_m.pre.rate)
MgCa_sw_m.pre.shp = 1000
MgCa_sw_m.pre.rate = 0.01
}"
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 1000, n.thin = 2)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
mg_mod = " model {
#Data model for seawater MgCa observations
for(i in 1:length(MgCa_sw)){
MgCa_sw[i] ~ dnorm(MgCa_sw_m[MgCa_sw.age.ind[i]], 1 / MgCa_sw.sd[i] ^ 2)
}
#System model for MgCa_sw timeseries
for(i in 2:nmgca.ages){
MgCa_sw_m[i] = MgCa_sw_m[i-1] * (MgCa_sw_m.eps[i] + 1)
#MgCa_sw_m.eps[i] ~ dunif(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac - 0.01, MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac + 0.01)
MgCa_sw_m.eps[i] ~ dnorm(MgCa_sw_m.eps[i - 1] * MgCa_sw_m.eps.ac, MgCa_sw_m.pre)
}
#MgCa_sw_m.eps[1] ~ dunif(-0.01, 0.01)
MgCa_sw_m.eps[1] ~ dnorm(0, MgCa_sw_m.pre)
MgCa_sw_m[1] ~ dunif(MgCa_sw_m.init.min, MgCa_sw_m.init.max)
MgCa_sw_m.init.min = 1
MgCa_sw_m.init.max = 2
#Priors on MgCa_sw model parameters
MgCa_sw_m.eps.ac ~ dunif(0.8, 1)
MgCa_sw_m.pre ~ dgamma(MgCa_sw_m.pre.shp, MgCa_sw_m.pre.rate)
MgCa_sw_m.pre.shp = 1000
MgCa_sw_m.pre.rate = 0.01
}"
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 1000, n.thin = 2)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
mgca_ts.step = 1
mgca_ts.ages = seq(mgca_ts.min, mgca_ts.max, -mgca_ts.step)
mgca_ts.len = length(mgca_ts.ages)
##Age index for seawater MgCa samples
mgca_sw_age.ind = round((mgca_ts.min - d_mgca_sw$Age) / mgca_ts.step) + 1
##Data to pass to BUGS model
dat = list(nmgca.ages = mgca_ts.len, MgCa_sw.age.ind = mgca_sw_age.ind, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma)
mg_post = jags(model.file = textConnection(mg_mod), parameters.to.save = parameters,
data = dat, inits = NULL, n.chains=4, n.iter = 20000,
n.burnin = 1000, n.thin = 2)
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, mg_post$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
mg_post
View(mg_post$BUGSoutput$summary)
dada= rgamma(10000,1000,0.01)
sd(dada)
sd(dada)/mean(dada)
dada= rgamma(10000,10000,0.1)
sd(dada)/mean(dada)
dada= rgamma(10000,1000,0.001)
dada= rgamma(10000,100,0.001)
dada= rgamma(10000,1000,0.01)
dada= rgamma(10000,100,0.001)
sd(dada)/mean(dada)
##Set up timeseries for MgCa_sw modeling
mgca_ts.min = 110
mgca_ts.max = 0
mgca_ts.step = 1
mgca_ts.ages = seq(mgca_ts.min, mgca_ts.max, -mgca_ts.step)
mgca_ts.len = length(mgca_ts.ages)
##Age index for seawater MgCa samples
mgca_sw_age.ind = round((mgca_ts.min - d_mgca_sw$Age) / mgca_ts.step) + 1
##Add age seawater MgCa TS indicies for MgCa foram data
mgca_age.ind.sw = round((mgca_ts.min - d_mgca$Age.Ma) / mgca_ts.step) + 1
mgca_age.ind.all = matrix(c(mgca_age.ind, mgca_age.ind.sw), ncol = 2)
##Read in MgCa calibration dataset
d_mgca_calib = read.csv("mgca_calib.csv")
##Age index for MgCa calibration samples
mgca_calib_age.ind = round((mgca_ts.min - d_mgca_calib$Age) / mgca_ts.step) + 1
##Read in d18O calibration dataset
d_d18O_calib = read.csv("C_comp.csv")
d_d18O_calib = d_d18O_calib[is.na(d_d18O_calib$Ignore),]
##Parameters to be saved
parameters = c("d18O_sw", "BWT", "BWT.eps.ac", "BWT.pre", "d18O_sw.eps.ac", "d18O_sw.pre",
"lc", "MgCa_calib.pre", "a", "d18O_calib.pre", "d18O_calib.sd.off",
"MgCa_sw_m", "MgCa_sw_m.pre", "MgCa_sw_m.eps.ac")
##Data to pass to BUGS model
dat = list(nages = ts.len, nmgca.ages = mgca_ts.len,
MgCa_calib.bwt.m = d_mgca_calib$BWT, MgCa_calib.bwt.sd = d_mgca_calib$BWT_sd, MgCa_calib = d_mgca_calib$MgCa,
d18O_calib.bwt.m = d_d18O_calib$Temperature_C, d18O_calib.bwt.sd = rep(0.2,nrow(d_d18O_calib)), d18O_calib = d_d18O_calib$C.SW_d18O,
MgCa_sw.age.ind = mgca_sw_age.ind, MgCa_sw = d_mgca_sw$MgCa, MgCa_sw.sd = d_mgca_sw$Sigma,
MgCa.age.ind = mgca_age.ind.all, MgCa = d_mgca$MgCa,
d18O.age.ind = o_age.ind, d18O = d_o$d18O)
##Run the inversion
t1 = proc.time()
post2 = jags.parallel(model.file = "split_temporal.R", parameters.to.save = parameters,
data = dat, n.chains=3, n.iter = 20000,
n.burnin = 10000, n.thin = 10)
proc.time() - t1
#Get some indicies
sims = nrow(post2$BUGSoutput$sims.list$BWT)
BWT.start = match("BWT[1]", row.names(post2$BUGSoutput$summary))
d18O.start = match("d18O_sw[1]", row.names(post2$BUGSoutput$summary))
MgCa.start = match("MgCa_sw_m[1]", row.names(post2$BUGSoutput$summary))
plot(-10, 0, xlab="Age", ylab ="Temperature", xlim=c(0,18), ylim=c(-3,11))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, post2$BUGSoutput$sims.list$BWT[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[BWT.start:ts.len, 7], col="red", lty=3)
points(d_mgca$Age.Ma, rep(-3, nrow(d_mgca)), pch=21, bg = "white")
plot(-10, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(0,18), ylim=c(1.25,-2))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 7], col="red", lty=3)
points(d_o$Age.Ma, rep(1.25, nrow(d_o)), pch=21, bg = "white")
plot(-10, 0, xlab="Age", ylab ="Seawater d18O", xlim=c(0,18), ylim=c(2,-1.5))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(ts.ages, post2$BUGSoutput$sims.list$d18O_sw[i,], col = rgb(0,0,0, 0.01))
}
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 5], col="red")
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 3], col="red", lty=3)
lines(ts.ages, post2$BUGSoutput$summary[d18O.start:(d18O.start+ts.len-1), 7], col="red", lty=3)
points(d_o$Age.Ma, rep(2, nrow(d_o)), pch=21, bg = "white")
plot(-10, 0, xlab="Age", ylab ="Seawater Mg/Ca", xlim=c(0,100), ylim=c(0.8,6))
for(i in seq(1, sims, by = max(floor(sims / 2500),1))){
lines(mgca_ts.ages, post2$BUGSoutput$sims.list$MgCa_sw_m[i,], col = rgb(0,0,0, 0.01))
}
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 5], col="red")
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 3], col="red", lty=3)
lines(mgca_ts.ages, post2$BUGSoutput$summary[MgCa.start:(MgCa.start+mgca_ts.len-1), 7], col="red", lty=3)
points(d_mgca_sw$Age, d_mgca_sw$MgCa, pch=21, bg = "white")
points(d_o$Age.Ma, rep(1, nrow(d_o)), pch=21, bg = "black")
